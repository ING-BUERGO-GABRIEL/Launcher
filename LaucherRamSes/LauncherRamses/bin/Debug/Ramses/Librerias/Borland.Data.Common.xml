<?xml version="1.0" encoding="UTF-8"?>
<doc>
   <assembly>Borland.Data.Common</assembly>
   <members>
      <member name="T:Borland.Data.Common.BdpType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the data type of a field or property, for use in a <class namespace="Borland.Data.Provider">BdpParameter</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Each parameter is of a certain data type. Optionally, parameters can also consist of subtypes which are based on the values of the BdpType enumeration. The following table describes the BdpType enumerators.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Unknown</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A parameter of unknown type, these are stored by default in the .NET Framework type of Object.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>String</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A stream of between 1 and 8,000 non-Unicode characters.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Boolean</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A simple type representing the values <b>true</b> and <b>false</b>.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Int16</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A signed 16-bit integer containing values between -32768 and 32767.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Int32</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A signed 32-bit integer containing values between -2147483648 and 2147483647.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Int64</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A signed 64-bit integer containing values between -9223372036854775808 and 9223372036854775807.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Float</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A floating point type with a precision of 7 digits. </para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Double</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A floating point type with a precision of 15-16 digits. </para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Decimal</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A simple type with 28-29 significant digits. </para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Date</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A date type ranging from January 1, 1753 to December 31, 9999.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Time</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A time type ranging in value from January 1, 1753 to December 31, 9999 to an accuracy of 3.33 milliseconds.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>DateTime</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A combined date and time type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Bytes</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>An unsigned 8-bit integer ranging from 0 to 255.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>VarBytes</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A variable length stream of between 1 and 8,000 non-Unicode characters.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Blob</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Binary large object.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Cursor</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A database cursor, which is a memory buffer.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Guid</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A globally unique identifier. Can be a string, int or other data type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Adt</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>An abstract data type, which represents a user-defined type similar to a record.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Array</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A list collection of elements of the same type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Ref</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A reference to an ADT field.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Nested</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Nested table (ADT). Cursors use this field type and subtype to indicate the number of fields in the nested table. The values of those fields appear a subsequent fields on the same cursor.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>stFixed</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A CHAR type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>stBinary</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A binary data type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>stMemo</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A text memo.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>stHBinary</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A binary large object (BLOB).</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>stHMemo</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A character large object (CLOB).</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>stBFile</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A BLOB subtype.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpParamType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the direction of a parameter.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can specify a direction for each parameter, to determine whether it is an input, output, input/output, return value, or unknown. If you are expecting output parameters from your stored procedures, you must specify the parameters as output or as input/output. If the procedure is to pass back a return value, you need to specify the parameter as a return value type. The following table describes the allowable enumerators.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ParamUNKNOWN</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that the parameter direction is unknown.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ParamIN</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies an input only parameter.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ParamOUT</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies an output parameter.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ParamINOUT</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies an input/output parameter.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ParamRET</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a return value parameter.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpUpdateMode">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines how updates are to be performed against the data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Updates can be performed against the data source in two ways. This value is used to indicate that the data source should either be updated completely, even when rows have no changes, or that it should be updated by key value only, meaning that only rows in which the key value is changed should be updated in the data source.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>All</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Updates all rows in the data source.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Key</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Locates rows to be updated by the key field specified here.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpIsolation">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the transaction isolation level.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can set the isolation level for each transaction. The isolation level refers to the </para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ReadCommitted</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The transaction imposes a shared lock which restricts the reading of modified data. You can, however, change the data before the end of a transaction. This action results in non-repeatable reads or phantom data.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>RepeatableRead</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The transaction locks all data in a query, preventing any updates to that data. Using this isolation level eliminates non-repeatable reads, but can still result in phantom data.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>DirtyRead</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>No exclusive locks. Any other user can read and write to data that has been changed prior to committing. </para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Custom</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>This is an unknown value. By default, the isolation level is the same as the calling component's isolation level. If the calling component is the root component, this value is set to Serializable.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.ConnectionProps">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the connection properties for a particular data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Currently, you can only set the schema name for the data source with this enumerator.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SchemaName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The name of the specific data source schema.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.ISQLConnection">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <interface namespace="Borland.Data.Common">ISQLConnection</interface> interface enables an inheriting class to implement a <class namespace="System.Data">SQLConnection</class> class, which represents a unique session with a SQL database. The <class namespace="Borland.Data.Provider">BdpConnection</class> uses the methods implemented in this interface to connect to a database.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">An application does not create an instance of the <interface namespace="Borland.Data.Common">ISQLConnection</interface> interface directly, but creates an instance of a class that inherits <interface namespace="Borland.Data.Common">ISQLConnection</interface>. Classes that inherit <interface namespace="Borland.Data.Common">ISQLConnection</interface> must implement all inherited members, and typically define additional members to add provider-specific functionality. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you intend to implement support for a data source not already supported by BDP.NET, you must create a class that implements this interface. The <class namespace="Borland.Data.Provider">BdpConnection</class> implements this interface, which allows it to connect to one or more data sources.</para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>To promote consistency among .NET data providers, name the inheriting class in the form <i>Prv</i>Classname where <i>Prv</i> (for Provider) is the uniform prefix you give to all classes in a specific .NET data provider namespace. For example, ORA is the prefix of the <class namespace="Borland.Data.Oracle">ORAConnection</class> class in the Borland.Data.Oracle namespace. </para>
            
            </note>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetProperty">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets the connection property.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eConnProp</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the connection property.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The value of the connection property.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.SetProperty">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the connection property.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eConnProp</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the connection property.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The value of the connection property.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.SetOptions">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the connection options for the target database. </para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>connOptions</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the connection options, as defined by your database system.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set connection options before you call the <method namespace="Borland.Data.Common" interface="ISQLConnection">Connect</method> method. The options must be passed as quoted strings and should be separated by semi-colons. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">For example, to support OS authentication, the Borland Oracle and MSSQL providers pass the property to a connection object.</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="CSharp" os="all" product="all" status="release">BdpConnection conn = new BdpConnection();
conn.SetOptions = "OSAuthentication = true";</codeBlock>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="CSharp" os="all" product="all" status="release">myADONETConnection: TADONETConnection(Classes::TComponent* AOwner);
myADONETConnection.ConnectOptions: TConnectOption;</codeBlock>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetErrorMessage">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the error message text of a native database error.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ErrorMessage</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of a StringBuilder object that constructs the error message.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>StringBuilder class</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A call to this method returns an error string for the last command sent to the server. Once the application calls the <method namespace="Borland.Data.Common" interface="ISQLConnection">GetErrorMessage</method> method, the message is cleared and subsequent calls will not return the error message.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Rollback">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Discards changes before they are made to the database.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ilTransID</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the transaction number for the transaction you want to roll back. It should match the transaction ID provided to the <method namespace="Borland.Data.Common" interface="ISQLConnection">BeginTransaction</method> method. Int32.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A call to this method ends the specified transaction, discarding any changes made to the data since the call to the <method namespace="Borland.Data.Common" interface="ISQLConnection">BeginTransaction</method> method for the given transaction. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Commit">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Commits the changes to the database.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ilTransID</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the transaction number that you want to commit. Should match the transaction ID provided to the <method namespace="Borland.Data.Common" interface="ISQLConnection">BeginTransaction</method> method. Int32.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Call this method to make any changes that are made during the specified transaction permanent. At the completion of the commit operation, the transaction is terminated. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.BeginTransaction">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Starts a new transaction.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ilTransID</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the transaction number for the new transaction.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Starts a new transaction. The server holds any updates, insertions, and deletions that occur after a call to this method until either a <method namespace="Borland.Data.Common" interface="ISQLConnection">Commit</method> or <method namespace="Borland.Data.Common" interface="ISQLConnection">Rollback</method> method is called. By assigning transaction IDs, you can initiate successive transactions with the same connection. Multiple concurrent transactions are not supported.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetResolver">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets a class that resolves the connection based on the collection of criteria, such as the connection string, connection options, and other properties.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Used when building your own provider. This method returns the properties you need to be able to construct and validate a connection to a data source.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetMetaData">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns an interface to retrieve metadata for the current connected database.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns an interface that can be used to retrieve information about the tables, columns, indexes, stored procedures, and other schema objects on the database server. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetSQLCommand">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a class that implements the <interface namespace="Borland.Data.Common">ISQLCommand</interface> interface.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a class which you can then use to process SQL queries and stored procedures. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.ChangeDatabase">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Changes the connection to another database.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szDatabase</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of the target database to which you want to change your connection. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szUser</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the username you need to connect to the target database. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szPasswd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the password you need to connect to the target database. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>bConnected</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates the state of the connection to the target database. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Boolean</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Changes the connection to another database given the database name, username, password, and a Boolean indicating the state of the target database.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.FreeConnect">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Frees the connection memory resources, without disconnecting.</para>
         </summary>
         <comments>
            <tip xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>Make a call to the <method namespace="Borland.Data.Common" interface="ISQLConnection">Disconnect</method> method before you call this one.</para>
                  
            </tip>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Disconnect">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Disconnects from the database.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Connect">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Connects to a data source.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameters</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szDatabase</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of the target database. Typically, this is the client-side alias for the database. For Interbase, this is the name of the .gdb file. For Oracle, this is the entry in the TNSNames.ora file. For DB2, this is the client-side node. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szUser</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the username needed to connect to the target database.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szPasswd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the password needed to connect to the target database.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szHostName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the host name, if there is one, for the target database. If your database system defines a machine name, indicate it here.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Connects to a given data source, typically a database. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.ISQLCommand">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Provides the means to execute SQL commands against a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">An application does not create an instance of the <class namespace="borland.data.common">ISQLCommand</class> interface directly, but creates an instance of a class that inherits <class namespace="borland.data.common">ISQLCommand</class>. Classes that inherit <class namespace="borland.data.common">ISQLCommand</class> must implement all inherited members, and typically define additional members to add provider-specific functionality. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you intend to implement support for a data source not already supported by BDP.NET, you must create a class that implements this interface. The <class namespace="Borland.Data.Provider">BdpCommand</class> implements this interface, which allows it to execute SQL commands.</para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>To promote consistency among .NET data providers, name the inheriting class in the form <i>Prv</i>Classname where <i>Prv</i> (for Provider) is the uniform prefix you give to all classes in a specific .NET data provider namespace. For example, ORA is the prefix of the ORACommand class in the Borland.Data.Oracle namespace.</para>
            
            </note>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetParameter">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets an output parameter from a stored procedure.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uParamNumber</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The number of the parameter in the parameter collection. These are numbered sequentially in ascending order, starting with the number 1.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uChildPos</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Not used.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Contains the value of the parameter. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>bIsNull</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates if the parameter is null. Returns <b>True</b> if null, otherwise, returns <b>False</b>. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Boolean</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Retrieves the output parameter from a stored procedure after it has executed. After calling the <method namespace="Borland.Data.Common" interface="ISQLCommand">Execute</method> method to run the stored procedure, the BDP.NET provider can call <method namespace="Borland.Data.Common" interface="ISQLCommand">GetParameter</method> to retrieve each output parameter.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.SetParameter">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets SQL and stored procedure parameter.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uParamNumber</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates the number of a parameter in a list. Parameters are numbered sequentially in ascending order, starting with the number 1. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uChildPos</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Not used.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para> Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eParamDir</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the direction of the parameter, whether Input, Output, InputOutput, or ReturnValue. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>ParameterDirection class</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uLogType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the logical data type of the parameter. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>BdpType enum</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uSubType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the logical subtype, if any, of the parameter's data type. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>BdpType enum</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>lMaxPrecision</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the maximum number of digits used to represent the <property namespace="borland.data.common" class="bdpparameter">Value</property> property. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>lMaxScale</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of decimal places to which a parameter value is resolved. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Length</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the length of the parameter. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the value of the parameter. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>bIsNull</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates if the parameter is set to null. If set to null, the value is <b>True</b>, otherwise <b>False</b>. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Boolean</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets a parameter value for the query or stored procedure before it is executed. <class namespace="Borland.Data.Provider">BdpCommand</class> calls the <method namespace="Borland.Data.Common" interface="ISQLCommand">Prepare</method> method or the <method namespace="Borland.Data.Common" interface="ISQLCommand">PrepareProc</method> method before calling <method namespace="Borland.Data.Common" interface="ISQLCommand">SetParameter</method>. After binding all the parameters with the <method namespace="Borland.Data.Common" interface="ISQLCommand">SetParameter</method> method, <class namespace="Borland.Data.Provider">BdpCommand</class> calls the <method namespace="Borland.Data.Common" interface="ISQLCommand">Execute</method> method to execute the query or stored procedure. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Release">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Releases the cursor and associated memory.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Close">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Closes the command.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Frees the resources that are allocated when a query or stored procedure is prepared, by a call to the <method interface="ISQLCommand" namespace="Borland.Data.Common">Prepare</method> method or the <method namespace="Borland.Data.Common" interface="ISQLCommand">PrepareProc</method> method. After calling the <method interface="ISQLCommand" namespace="Borland.Data.Common">Close</method> method, your SQL command or stored procedure must be reprepared before you can call the <method interface="ISQLCommand" namespace="Borland.Data.Common">Execute</method> method again.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetErrorMessage">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the message text of a native database error.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ErrorMessage</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A StringBuilder object that constructs and displays the error message.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>StringBuilder class</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A call to this method returns an error string for the last command sent to the server. Once the application calls the <method namespace="Borland.Data.Common" interface="ISQLCommand">GetErrorMessage</method> method, the message is cleared and subsequent calls will not return the error message.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetRowsAffected">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the number of rows affected by an Insert, Update, or Delete SQL statement. </para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>lRowsAffected</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A reference to the number of rows that were changed by the execution of the SQL statement.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the number of records that were inserted, updated, or deleted by the most recent query. Call <method namespace="Borland.Data.Common" interface="ISQLCommand">GetRowsAffected</method> after you call the <method namespace="borland.data.common" class="isqlcommand">Execute</method> method.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Execute">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Executes a SQL command or stored procedure.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SQLCur</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A reference to an <class namespace="borland.data.common">ISQLCursor</class> interface object that holds the results of the <method namespace="borland.data.common" class="isqlcommand">Execute</method> method.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Cursor class</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>nResultCols</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates the number of columns to return in the cursor.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> Executes a SQL command or a stored procedure and, if successful, returns a result set into the cursor indicated by the <i>SQLCur</i> parameter. The <i>nResultCols</i> parameter indicates the number of columns to return for each fetch.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <class namespace="Borland.Data.Provider">BdpCommand</class> calls the <method namespace="Borland.Data.Common" interface="ISQLCommand">Prepare</method> method or the <method namespace="Borland.Data.Common" interface="ISQLCommand">PrepareProc</method> method and set the values of any input parameters before calling the <method namespace="Borland.Data.Common" interface="ISQLCommand">Execute</method> method. Once a query or stored procedure has been prepared, the application can call the <method namespace="Borland.Data.Common" interface="ISQLCommand">Execute</method> method multiple times without repreparing it. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetStoredProcedureSQL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the database-specific SQL for stored procedure creation, given a stored procedure name and an array of parameters.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SQL</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of a class of the StringBuilder type, which is used to construct the SQL statement.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>StringBuilder class</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ParamList</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of an array of stored procedure parameters.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Object[]</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.PrepareProc">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Prepares a stored procedure, given the stored procedure name and the number of parameters.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SP</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the stored procedure.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iParamCount</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The number of parameters to be passed to the procedure.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You must prepare any command or stored procedure that uses parameters, before you submit them for execution. After the SQL command is prepared, it can set input parameter values using the <method namespace="Borland.Data.Common" interface="ISQLCommand">SetParameter</method> method. It can then call the <method namespace="Borland.Data.Common" interface="ISQLCommand">Execute</method> method. For simple queries, use the <method namespace="Borland.Data.Common" interface="ISQLCommand">Prepare</method> method. Once a stored procedure has been prepared, <class namespace="Borland.Data.Provider">BdpCommand</class> can change parameter values and execute the stored procedure without calling <method namespace="Borland.Data.Common" interface="ISQLCommand">Prepare</method> a second time. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Prepare">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Prepares the SQL command, given the command and the number of parameters. </para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szSQL</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The SQL statement you want prepared.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iParamCount</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The number of parameters that are to be used in the statement.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You must prepare any command or stored procedure that uses parameters, before you submit them for execution. After your application prepares the SQL command, it can set input parameter values using the <method namespace="Borland.Data.Common" interface="ISQLCommand">SetParameter</method> method. It can then call the <method namespace="Borland.Data.Common" interface="ISQLCommand">Execute</method> method. For stored procedures, use the <method namespace="Borland.Data.Common" interface="ISQLCommand">PrepareProc</method> method. Once <class namespace="Borland.Data.Provider">BdpCommand</class> has prepared a query, it can change parameter values and execute a query or stored procedure without calling <method namespace="Borland.Data.Common" interface="ISQLCommand">Prepare</method> a second time. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.ISQLCursor">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Represents a result set and provides methods for retrieving individual field values and cursor-level metadata.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <interface namespace="Borland.Data.Common">ISQLCursor</interface> interface enables an inheriting class to implement a <class namespace="System.Data">SQLCursor</class> class, which represents a database cursor. An application does not create an instance of the <interface namespace="Borland.Data.Common">ISQLCursor</interface> interface directly, but creates an instance of a class that inherits <interface namespace="Borland.Data.Common">ISQLCursor</interface>. Classes that inherit <class namespace="Borland.Data.Common">ISQLCursor</class> must implement all inherited members, and typically define additional members to add provider-specific functionality. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you intend to implement support for a data source not already supported by BDP.NET, you must create a class that implements this interface. The <class namespace="Borland.Data.Provider">BdpDataReader</class> implements this interface, which allows it to retrieve result sets from the data source.</para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>To promote consistency among .NET data providers, name the inheriting class in the form <i>Prv</i>Classname where <i>Prv</i> (for Provider) is the uniform prefix you give to all classes in a specific .NET data provider namespace. For example, ORA is the prefix of the <class namespace="Borland.Data.Oracle">ORACursor</class> class in the Borland.Data.Oracle namespace.</para>
            
            </note>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetVarBytes">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns binary data from binary and varbinary fields.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>buffer</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the buffer to contain the binary data when returned. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Byte[] by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iLength</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the length of the buffer. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this method to return a value from a column that contains variable binary field data. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetBlob">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets a binary (BLOB) or character (CLOB) large object.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>buffer</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the buffer to contain the BLOB data when returned.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Byte[] by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iLength</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the length of the buffer.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Retrieves the value of a binary large object (BLOB) or character large object (CLOB) field. You can call the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnType</method> method first to make sure the column is a BLOB type before calling <method namespace="borland.data.common" class="isqlcursor">GetBlob</method>. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetBlobSize">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets the size, in bytes, of a given BLOB or CLOB object.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>IBlobSize</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies, in bytes, the size of the BLOB. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int64 by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this method to determine the size of a BLOB/CLOB before retrieving a BLOB/CLOB value.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetDecimalAsString">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets a decimal value as a string value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a <class namespace="System.Text">StringBuilder</class> object to contain the string values.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>StringBuilder class</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This method returns decimal values as strings.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetTimeStamp">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the value of a DateTime value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column in the database table that is a datetime type column. Columns are numbered sequentially as ascending values starting at the number 0. You can use <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> to obtain an upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of a datetime object. This is a buffer to receive the value you are fetching. A DateTime object represents a moment in time, as represented by 100-nanosecond ticks.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>DateTime by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the value of a given datetime field in a column. You can use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnType</method> method to validate the field as a datetime type. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetGuid">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets a Guid value from a Guid data type.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound. Int16.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a Guid object to contain the return value. A Guid is a globally unique identifier that is a 128-bit integer that can be used to identify any object, including a row in a table.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Guid by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetInt64">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets an Int64 value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the buffer to contain the object when returned.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int64 by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnType</method> method to validate that the field is an Int64 type field before you call this method.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetLong">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a long value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the column whose value you want to fetch. Columns are numbered sequentially, in ascending order, starting at the number 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A buffer to receive the value.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetShort">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a short value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A buffer to contain the returned value.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this method to return a short (Int16) or a Boolean. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnType</method> method to validate the field type before calling this method. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetDouble">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a double value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Identifies the column whose value you want to fetch. Columns are numbered sequentially, in ascending order, starting at the number 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A buffer to receive the double value.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Double by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnType</method> method to validate that the field is a valid Double type. Doubles are stored as Float64 types.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetFloat">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a float value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 1. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a buffer that contains the returned value. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Float32</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnType</method> method first to validate that the field is a float type.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetString">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a string value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Data</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a reference to an object of <class namespace="System.Text">StringBuilder</class> type. </para>
                        
                  </td>
                        
                  <td>
                           
                     <para>StringBuilder class by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can call this method to return string values of various sizes. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnLength</method> method to determine the length. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetIsNull">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a Boolean indicating if a given field in the current row contains a null value.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>iInd</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Indicates whether or not the object is null. If it is null, this value contains 1, otherwise it contains 0.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns <b>True</b> if the field is null, otherwise returns <b>False</b>.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Release">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Frees the cursor and its associated memory.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This method takes no parameters. Releases the current cursor and its memory. Subsequent calls to the cursor fail. Returns an Int32 value.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetNextResult">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the next result set, if available.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SQLCur</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a reference to a SQL cursor object, which is an implementation of the <class namespace="borland.data.common">ISQLCursor</class> interface.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>ISQLCursor by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>nResultCols</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The number of columns in the cursor object.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A call to this method returns the next result set into the cursor, if one is available. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Next">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Moves the internal cursor pointer to the next row in the result set.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you try to move past the last record (EOF) with this method, it returns an error.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetRowsAffected">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the number of rows affected by an Insert, Update, or Delete SQL statement. </para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>lRowsAffected</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A reference to the number of rows that were changed by the execution of the SQL statement.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the number of records that were inserted, updated, or deleted by the most recent query. Call <method namespace="Borland.Data.Common" interface="ISQLCommand">GetRowsAffected</method> after you call the <method namespace="borland.data.common" class="isqlcommand">Execute</method> method.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetErrorMessage">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the short text of a database error message for the last command sent to the server.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ErrorMessage</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A StringBuilder object that holds the message once it is returned. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetErrorMessageLen</method> method first to determine the size of the ErrorMessage object.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>StringBuilder class by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If the last method that accessed the server returned an error code, a call to this method returns the message text for that code. The message is cleared after it is returned by this method. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetColumnLength">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the length in bytes, to store the column data.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameters</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uCol</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ulLength</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the length of the column.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int32 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the length in bytes of the column. Use this method when you want to create a buffer or a data structure to hold values from the given column. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetColumnType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the column data type given a column number.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uCol</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the logical type of the column.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16 by Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uSubType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the logical subtype of the column, if it exists.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16 by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the column data type and subtype for a given column. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetColumnTypeName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the name of the column data type given a column number.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uCol</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the database column number.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szTypeName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The string name of the column data type.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns CHAR for a character type or VARCHAR for a variable length character type. The typenames can be used to get the actual SQL type used in a CREATE TABLE statement.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the column name.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uCol</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the number of the column whose value you want to return. Columns are sequentially numbered, in ascending order, starting with the number 0. Use the <method namespace="Borland.Data.Common" interface="ISQLCursor">GetColumnCount</method> method to determine the upper bound.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szColName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of the column.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You pass this method a column number and it returns the column name. You could use the <method namespace="borland.data.common" class="isqlcursor">GetColumnCount</method> method to return the number of columns, then create a loop to iterate through the columns to retrieve each column's name. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.GetColumnCount">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the number of columns in a row.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can use this method to return the number of columns in a result set. You can then use the result as the upper bound in a loop to iterate through the fields in the row. Returns an Int16 value.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpException">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of the <class namespace="Borland.Data.Common">BdpException</class> object.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Parameter</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>message</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The message part of the exception.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>inner</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The Exception instance that caused the current exception.</para>
                  
                  </td>
               
               </tr>
            
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Always contains at least one instance of <class namespace="Borland.Data.Common">BdpErrorCollection</class>, which contains at least one instance of <class namespace="Borland.Data.Common">BdpError</class>. If the severity of the error is too great, the server may close the connection. However, you can reopen the connection and continue. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">When one exception throws another, the inner property of the second exception contains a reference to first exception. You can use the inner property to get the exceptions caused the current exception. </para>
            <tip xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>You can choose to ignore exceptions that occur by setting the <ide type="dialogNode">Exception Types to Ignore</ide> option in the <ide type="dialog">Options</ide> dialog. You can find this dialog by choosing <menuPath>
                     
                     <menuItem>Tools</menuItem>
                     
                     <menuItem>Options</menuItem>
                  
                  </menuPath>.</para>
            
            </tip>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.BdpException">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The exception that is thrown when the underlying provider returns a warning or error for a BDP.NET data source. </para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>message</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns the error message generated by the exception.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>errorCode</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns the error code generated by the exception.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>source</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns the name of the BDP.NET provider that generated the exception.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>inner</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns the exception that generated the current exception.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">An exception is thrown if the application encounters a database error or warning. You can interrogate the exception to determine if it is a warning you can ignore or to determine the error type and how to respond to it. This class cannot be inherited. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">One exception can generate another. In that case, you can trace back to find the exception that generated the current one by interrogating the <property namespace="Borland.Data.Common" class="BdpException">inner</property> property. The current exception's <property namespace="Borland.Data.Common" class="BdpException">inner</property> property should contain a reference to the exception that generated it.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.ErrorCode">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets the HRESULT of the error. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the five-character error code following the ANSI SQL standard for the database.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Source">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains the name of the database that generated the error.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains the name of the database that generated the error. This can be particularly important if your application either maintains connections to multiple databases or if your application switches between multiple databases.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Errors">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains errors generated by this exception.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains a list of errors thrown by the exception. The exception methods and properties apply only to those generated by the target database. They do not apply to application errors.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpError">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Retrieves any error information when BDP.NET encounters a database server error.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This class is created by the <class namespace="Borland.Data.Provider">BdpDataAdapter</class> when an error occurs. An instance of <class namespace="Borland.Data.Common">BdpError</class> is created and managed by the <class namespace="Borland.Data.Common">BdpErrorCollection</class> class, which in turn is created by the <class namespace="Borland.Data.Common">BdpException</class> class. If the severity of the error is too great, the server may close the connection. However, you can reopen the connection and continue.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.ToString">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets the complete text of the error message.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a string in the form <class namespace="Borland.Data.Common">BdpError</class> followed by the message and a stack trace.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Message">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains a short message describing the error.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains a short version of the error message text of a native database error.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.NativeError">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains database-specific errors.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains a database-specific native error that you can then act upon or ignore. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Source">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains the name of the database that generates the error.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains the name of the database that generates the error. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.SQLState">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains the five-character error code following the ANSI SQL standard for the database.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains the five-character error code following the ANSI SQL standard for the database. Refer to the documentation for your database for details about the error code and its resolution.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpErrorCollection">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Retrieves all errors generated by the Borland Data Provider.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The error collection is a list object that contains all errors generated by BDP.NET. The error collection can be scanned to read and respond to errors. This class cannot be inherited.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Add">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Adds an error message to the collection.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>error</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The <class namespace="Borland.Data.Common">BdpError</class> containing the message you want to add to the error collection.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Adds child objects to the error collection. All added objects are appended to the list.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Item">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets an individual error from the collection.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the error at a specific index. The index is a zero-based index.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.SyncRoot">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the syncRoot of the collection.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Each collection, whether a list, array, or hashtable, has a syncRoot. Each collection contains a single root and multiple nodes or branches below that root. When multiple threads access a collection, they might update values in the collection. When you want to use the values of the collection, your thread might not have an accurate and current snapshot of the collection that has been modified numerous times since you first retrieved it. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Perform synchronization on the syncRoot, not on the collection directly. Synchronization, starting at the syncRoot, ripples the updates throughout the tree to give you an accurate collection. Nonetheless, even when the collection is synchronized, other threads can modify the collection, which then causes the enumerator to throw an exception. You might consider trapping the exception to make sure that you know when your collection is modified by another thread.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.IsSynchronized">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets a Boolean indicating whether or not the collection is synchronized and therefore thread-safe.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Synchronization of a collection, list, array, or hashtable object ensures that the object is thread-safe, meaning that it is safe from being modified by another thread. Lists in the .NET Framework are organized in a tree or directory structure with one root node, or syncRoot. A list can be accessed and updated by multiple threads. When your application retrieves the list, it is retrieving a snapshot of the list at that particular moment. The list, therefore, is not automatically and dynamically updated. Before you make changes to a list or act upon the values in the list, you might want to force a synchronization of the list to refresh all list values, in case another thread has modified the list. This property contains <b>True</b> if the list is thread-safe, <b>False</b> if it is not.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Count">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the number of errors in this collection.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can use this property to return the number of items in the <class namespace="Borland.Data.Common">BdpErrorCollection</class>. Using this count, you can construct a loop to walk through the enumeration to perform other tasks, such as looking for specific errors or handling specific errors in the collection.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpParameter">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of the <class namespace="Borland.Data.Common">BdpParameter</class> object which represents a parameter that is passed to or from a command.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you are using parameterized SQL or stored procedures, you can pass parameters to them using the <class namespace="Borland.Data.Common">BdpParameter</class> class. The <property namespace="Borland.Data.Common" class="BdpParameter">Direction</property> property determines whether a parameter is an input parameter, an output parameter, or a return value. You can create a new instance of a <class namespace="Borland.Data.Common">BdpParameter</class> object using the simple constructor syntax. You can also specify a number of overloaded values in the constructor. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">To pass runtime parameters for a parameterized SQL statement or stored procedure, use the <class namespace="Borland.Data.Common">BdpParameterCollection</class> class. An empty <class namespace="Borland.Data.Common">BdpParameterCollection</class> is returned by the <class namespace="Borland.Data.Provider">BdpCommand</class>
               
               <property namespace="Borland.Data.Provider" class="BdpCommand">Parameters</property> property. After successfully preparing the command, parameters are added to the <class namespace="Borland.Data.Common">BdpParameterCollection</class> by calling the <method namespace="Borland.Data.Common" class="BdpParameterCollection">Add</method> method and passing the parameter information such as name, datatype, precision, scale, size, and so on. You can use one of the overloaded <method namespace="Borland.Data.Common" class="BdpParameterCollection">Add</method> methods or you can set individual <class namespace="Borland.Data.Common">BdpParameter</class> properties such as <property namespace="Borland.Data.Common" class="BdpParameter">Direction</property>, <property namespace="Borland.Data.Common" class="BdpParameter">Precision</property>, <property namespace="Borland.Data.Common" class="BdpParameter">Scale</property>, <property namespace="Borland.Data.Common" class="BdpParameter">DbType</property>, <property namespace="Borland.Data.Common" class="BdpParameter">BdpType</property>, <property namespace="Borland.Data.Common" class="BdpParameter">BdpSubType</property>, <property namespace="Borland.Data.Common" class="BdpParameter">Size</property>, and <property namespace="Borland.Data.Common" class="BdpParameter">MaxPrecision</property>. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Parameter names must be unique, and the parameters must be added to the <class namespace="Borland.Data.Common">BdpParameterCollection</class> in the same order in which parameter markers appear in the SQL. This limitation will be removed once there is support for named parameters. The <property namespace="Borland.Data.Common" class="BdpParameter">Direction</property> property, by default, is set to ParameterDirection.Input. In the case of stored procedures, it can be set to Output, InputOutput, or ReturnValue . If the inout parameter is expected to return more data than the input, you should specify the <property namespace="Borland.Data.Common" class="BdpParameter">Precision</property> to a size large enough to hold the output data. Precision is a byte, and if values larger than 255 bytes must be returned, you must set the <property namespace="Borland.Data.Common" class="BdpParameter">MaxPrecision</property> property. </para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>Not all databases support all the different parameter directions. </para>
            
            </note>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">While specifying the parameter datatype, you can use either System.Type or the BDP logical type and the subtype. You should set the <property namespace="Borland.Data.Common" class="BdpParameter">Value</property> property with the runtime value for all parameters before executing the command. After successful execution, output data is available in the <property namespace="Borland.Data.Common" class="BdpParameter">Value</property> property. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can see some illustrative examples of this class, by looking at the code behind the BdpInsertCommand, BdpUpdateCommand, or BdpDeleteCommand of a BdpDataAdapter that you create in an application. If you create a BdpDataAdapter by dropping a table from the Data Explorer, click on the Code editor to see how the BdpParameter is used as a way to pass column names from a given table to the command definition. An instance of a BdpParameter is created with its value the name of the database table column, and that parameter is added to the parameters collection of the command.</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="DelphiNet"> Self.bdpInsertCommand1.CommandText := 'INSERT INTO EMPLOYEE (EMP_NO, FIRST_NAME, LAST_NAME, PHONE_EXT, HIRE_DATE, DEPT'+
  '_NO, JOB_CODE, JOB_GRADE, JOB_COUNTRY, SALARY) VALUES (?, ?, ?, ?, ?, ?, ?, ?,'+
  ' ?, ?)';
  Self.bdpInsertCommand1.CommandType := System.Data.CommandType.Text;
  Self.bdpInsertCommand1.Connection := Self.BdpConnection1;
  Self.bdpInsertCommand1.ParameterCount := (ShortInt(10));
  Self.bdpInsertCommand1.Parameters.Add(Borland.Data.Common.BdpParameter.Create('EMP_NO', Borland.Data.Common.BdpType.Int16, Borland.Data.Common.BdpType.Unknown, 2, System.Data.ParameterDirection.Input, False, (System.Byte(2)), (System.Byte(0)), 'EMP_NO', System.Data.DataRowVersion.Current, nil));</codeBlock>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This code sample displays only a part of the definition of bdpInsertCommand1, but the last line shows how the BdpParameter is used to create a parameter list based on the column names of a connected database.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.BdpParameter">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of the <class namespace="Borland.Data.Provider">BdpParameter</class> object which represents a parameter that is passed to or from a command.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>parameterName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>dbtype</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The database data type of the parameter. Check your particular database system for allowable database types.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Bdptype</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The <type namespace="Borland.Data.Common">BdpType</type> of the parameter. </para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>subtype</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The <type namespace="Borland.Data.Common">BdpSubType</type> of the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The value represented by the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>size</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The size, in bytes, of the object represented by the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>sourceColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The column in the database that is represented by this parameter. </para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>direction</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The direction of the parameter. Parameters can have a direction of Input, Output, InputOutput, or ReturnValue. </para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>isNullable</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Boolean that specifies if the parameter can take a null value.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>precision</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The maximum number of digits used to represent the <property namespace="Borland.Data.Provider" class="BdpParameter">Value</property> property.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>scale</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The number of decimal places to which the <property namespace="Borland.Data.Provider" class="BdpParameter">Value</property> property is resolved.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>sourceVersion</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The version of the database column, which is represented by this parameter. Allowable values are Original, Current, Default, and Proposed. </para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you are using stored procedures, you can pass parameters to them using the <class namespace="Borland.Data.Provider">BdpParameter</class> class. You can also retrieve values from a database column to use as a parameter to a command. The <property namespace="Borland.Data.Provider" class="BdpParameter">Direction</property> property determines whether a parameter is an input parameter, an output parameter, or a return value. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.ToString">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Converts the parameter value to a string. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Parameters values are stored, by default, as Object data types. Because there are many types of values, the Object type provides a convenient data type in which to return the value. For a more efficient transformation, you can use the <method namespace="Borland.Data.Provider" class="BdpParameter">ToString</method> method to return the parameter as a string value, regardless of its data type. You can also cast the value to other data types. For instance, if you know you are returning an Int32, you can cast the return value to an int. For more information, see the data type documentation in the Microsoft .NET Framework SDK online help.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.DbType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the <property namespace="System.Data" class="OleDbParameter">DbType</property> of the parameter.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can either specify the <property namespace="System.Data" class="OleDbParameter">DbType</property> for a parameter or specify the <property namespace="Borland.Data.Provider" class="BdpParameter">BdpType</property> and <property namespace="Borland.Data.Provider" class="BdpParameter">BdpSubType</property> for a parameter. Specifying the <property namespace="System.Data" class="OleDbParameter">DbType</property> converts the value of the parameter to the .NET data provider <property namespace="System.Data" class="OleDbParameter">Type</property> before passing the value to the data source. If the type is not specified, BDP.NET infers the .NET data provider type of the parameter from the <property namespace="System.Data" class="OleDbParameter">Value</property> property of the <class namespace="Borland.Data.Provider">BdpParameter </class>object. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.BdpType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the BDP data type of the parameter.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Provider" class="BdpParameter">BdpType</property> property defaults to string. The following table lists the allowable types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>BdpType</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ADT</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Array</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Blob</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Boolean</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Bytes</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Cursor</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Date</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>DateTime</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Decimal</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Double</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Float</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Guid</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Int16</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Int32</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Int64</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Nested</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Ref</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Time</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Unknown</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>VarBytes</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>stBFile</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>stBinary</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>stFixed</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>stHBinary</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>stHMemo</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>stMemo</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.BdpSubType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the subtype of the parameter.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">In some cases, a parameter possesses both data type and subtype. If there is no subtype, set the subtype to <i>unknown</i>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Precision">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the maximum number of digits used to represent the <property namespace="System.Data" interface="IDataParameter">Value</property> property. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the maximum number of digits used to represent the <property namespace="borland.data.common" class="bdpparameter">Value</property> property. The default is 0, which indicates that the data provider sets the precision for the <property namespace="Borland.Data.Provider" class="BdpParameter">Value</property> property.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Scale">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets and sets the scale of the <property namespace="Borland.Data.Provider" class="BdpParameter">Value</property> property, which contains either a numeric or decimal value.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets and sets the number of digits to the right of the decimal for the numeric or decimal value of the <property namespace="Borland.Data.Provider" class="BdpParameter">Value</property> property. The default is 0.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Size">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets and sets the size of the parameter value in bytes.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The size is an Int32 type.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Direction">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets a value indicating whether the parameter is input-only, output-only, bidirectional, or a stored procedure return value parameter.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you want to use output or return parameters with stored procedures, you need to set this property. If the direction is output, and execution of the associated <class namespace="Borland.Data.Provider">BdpCommand</class> does not return a value, the <class namespace="Borland.Data.Provider">BdpParameter</class> contains a null value. After the last row from the last result set is read, <i>Output</i>, <i>InputOutput</i>, and <i>ReturnValue</i> parameters are updated. The default is <i>Input</i>.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Constant</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Input</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The parameter is an input parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>InputOutput</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The parameter can accept both input and output.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Output</para>
                        
                  </td>
                        
                  <td>
                           
                     <para> The parameter is an output parameter. </para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ReturnValue</para>
                        
                  </td>
                        
                  <td>
                           
                     <para> The parameter represents a return value from an operation such as a stored procedure, built-in function, or user-defined function. </para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.IsNullable">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the value that determines whether or not a parameter value can be null.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> if null values are accepted, otherwise, set to <b>False</b>. The default is <b>False</b>. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.ParameterName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets and sets the parameter name of the given parameter in a parameter collection.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Defaults to an empty string.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.SourceColumn">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the source column mapped to the DataSet. The default is an empty string. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this property and the <property namespace="Borland.Data.Provider" class="BdpParameter">SourceVersion</property> property when you are submitting pending changes to the database and you want to validate the version of the data in the target row. To return a value from a particular column in the database, set the <property namespace="Borland.Data.Provider" class="BdpParameter">SourceColumn</property> property to the name of the column. If the <property namespace="Borland.Data.Provider" class="BdpParameter">Direction</property> property is set to <i>Input</i>, the value is taken from the DataSet instead of the database. If the <property namespace="Borland.Data.Provider" class="BdpParameter">Direction </property> property is set to <i>Output</i>, the value is taken from the database. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.SourceVersion">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the <property namespace="Borland.Data.Provider" class="BdpParameter">DataRowVersion</property> to use when loading <property namespace="Borland.Data.Provider" class="BdpParameter">Value</property>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this property and the <property namespace="Borland.Data.Provider" class="BdpParameter">SourceColumn</property> property when you are submitting pending changes to the database and you want to validate the version of the data in the target row. Used by <property namespace="Borland.Data.Provider" class="BdpCommand">UpdateCommand</property> during an Update operation to determine whether the parameter value is set to Current or Original. This allows primary keys to be updated. This property is ignored by <property namespace="Borland.Data.Provider" class="BdpCommand">InsertCommand</property> and <property namespace="Borland.Data.Provider" class="BdpCommand">DeleteCommand</property>. This property is set to the version of the <class namespace="System.Data">DataRow</class> used by the <property namespace="borland.data.common" class="bdpparametercollection">Item</property> property, or the <method namespace="System.Data">GetChildRows</method> method of the <class namespace="System.Data">DataRow</class> object.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following table lists the allowable <property namespace="Borland.Data.Provider" class="BdpParameter">SourceVersion</property> values.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Member</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Current</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Current value of the column. Default.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Default</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Uses the DefaultValue of the column.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Original</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Original value of the column.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Proposed</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Uses a Proposed value.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Value">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the value of the parameter. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains an Object data type. You need to convert the value if you want to store it in another data type. For input parameters, the value is bound to the <class namespace="Borland.Data.Provider">BdpCommand</class> that is sent to the server. For output and return value parameters, the value is set on completion of the <class namespace="Borland.Data.Provider">BdpCommand</class> and after the <class namespace="Borland.Data.Provider">BdpDataReader</class> is closed. When sending a null parameter value to the server, you must specify <property namespace="Borland.Data.Provider" class="BdpParameter">DbNull</property>, not null. The null value in the system is an empty object that has no value. <property class="BdpParameter" namespace="Borland.Data.Provider">DbNull</property> is used to represent null values. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpParameterCollection">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Collects parameters into a .NET collection object that can be read and manipulated.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Serves as a logical storage and management structure for a group of parameters. Collections, which can be organized as lists, arrays, and hashtables, can be read from and sometimes written to, depending on the properties of the collection. You can navigate the collection tree to locate parameters or to add parameters.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.BdpParameterCollection">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Provider">BdpParameterCollection</class> object.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use the <class namespace="Borland.Data.Provider">BdpParameterCollection</class> constructor to create a new instance of a parameter collection. The <class namespace="Borland.Data.Provider">BdpParameterCollection</class> is a list of <class namespace="Borland.Data.Provider">BdpParameter</class> objects that are passed to a <class namespace="Borland.Data.Provider">BdpCommand</class>. These parameters can also map to DataSet columns.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.AddRange">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Copies a range of parameters from one part of a collection to the end of the collection.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a <method namespace="borland.data.common" class="bdpparametercollection">BdpParameterCollection</method> object.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you call <method namespace="Borland.Data.Provider" class="BdpParameterCollection">AddRange</method> multiple times in the same session, each call copies only the most recently named parameter collection.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If the new <property namespace="Borland.Data.Provider" class="BdpParameter.Collection">Count</property> is greater than the value of the <property namespace="System.Collections.ArrayList" class="ArrayList">Capacity</property> property, the capacity of the list is either doubled or increased to the new <property namespace="borland.data.common" class="bdpparametercollection">Count</property>, whichever is greater.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.Add">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Adds a parameter to the parameter collection.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>parameterName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>type</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The <type namespace="Borland.Data.Common">BdpType</type> of the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>subtype</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The subtype, which can be a <type namespace="Borland.Data.Common">BdpType</type>, of the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>size</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The size, in bytes, of the parameter.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>sourceColumn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the sourceColumn represented by the parameter.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> The <class namespace="BdpParameterCollection">BdpParameterCollection</class> is a collection object that can hold a number of objects of the same type in a hierarchical list. You can derive parameters from your database columns, and add them to the <class namespace="Borland.Data.Provider">BdpParameterCollection</class> in order to access them when building SQL statements using the <class namespace="Borland.Data.Provider">BdpCommand</class> object or the <class namespace="Borland.Data.Provider">BdpCommandBuilder</class> object. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.ItemType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Contains the data type of a <class namespace="Borland.Data.Provider">BdpParameter</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> You can retrieve parameters of any type, but they are returned as Object types, which is not as efficient or as strongly-typed as returning them to a variable of the same data type. Check this property to determine the data type before returning the value, so you can return it to a variable of the same data type, if necessary. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.IsFixedSize">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a Boolean indicating whether the collection object has a fixed size or whether it is automatically expanding to accommodate addition of new items. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, .NET collection objects are dynamically allocated and automatically expand to accommodate new members. You can set a limit on the size, which can improve performance. The Boolean returned by <property namespace="Borland.Data.Provider" class="BdpParameterCollection">IsFixedSize</property> is <b>True</b> if the parameter is a fixed size and <b>False</b> if it is variable.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.IsReadOnly">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a Boolean indicating whether the collection object is read-only or read-write.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If the collection object is read-only you can read and copy the parameter values, but you are unable to update the values as the result of an event. If the collection is read-write, you can modify the value of the parameters in the collection. The Boolean returned by <method namespace="Borland.Data.Provider" class="BdpParameterCollection">get_IsReadOnly</method> is <b>True</b> if the parameter collection is read-only and <b>False</b> if it is read-write.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Item">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the <class namespace="Borland.Data.Provider">BdpParameter</class> with a specified attribute.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This property is the indexer for the <class namespace="Borland.Data.Provider">BdpParameterCollection</class> class. An indexer makes a list collection act as though it is an array. You can use the <property namespace="Borland.Data.Provider" class="BdpParameterCollection">Item</property> property along with an index value between two brackets [ ] to indicate an element in the parameter collection. For instance, assume that you have retrieved a number of values from your database, such as row IDs, and added those to your parameter collection. You can use the <property namespace="borland.data.common" class="bdpparametercollection">Item</property> property to iterate through those parameters in the collection, just as you would in an array, as you pass each one in turn to a command or a stored procedure. Perhaps your procedure updates those same rows in the database or perhaps it performs some other operation on rows in the database based on values in the rows indicated by the particular row IDs. In any case, rather than having to know or to store a list of parameter names, you can use the <property namespace="Borland.Data.Provider" class="BdpParameterCollection">Item</property> property to index those parameters, providing more efficient access to them.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.SyncRoot">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the <property namespace="borland.data.common" class="bdpparametercollection">SyncRoot</property> of the collection.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Each collection, whether a list, array, or hashtable, has a <property namespace="borland.data.common" class="bdpparametercollection">SyncRoot</property>. Each collection contains a single root and multiple nodes or branches below that root. When multiple threads access a collection, they might update values in the collection. When you want to use the values of the collection, your thread might not have an accurate and current snapshot of the collection that has been modified numerous times since you first retrieved it. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Perform the synchronization on the <property namespace="borland.data.common" class="bdpparametercollection">SyncRoot</property>, not on the collection directly. Synchronization, starting at the <property namespace="borland.data.common" class="bdpparametercollection">SyncRoot</property>, ripples the updates throughout the tree to give you an accurate collection. Nonetheless, even when the collection is synchronized, other threads can modify the collection, which then causes the enumerator to throw an exception. You might consider trapping the exception to make sure that you know when your collection is modified by another thread.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.IsSynchronized">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a Boolean indicating whether or not the collection is synchronized and therefore thread-safe.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Synchronization of a collection, list, array, or hashtable object ensures that the object is thread-safe, meaning that it is safe from being modified by another thread. The Boolean returned by <method namespace="Borland.Data.Provider" class="BdpParameterCollection">get_IsSynchronized</method> is <b>True</b> if the parameter collection is synchronized and <b>False</b> if it is not.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Count">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a count of the number of parameters in the collection.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this method to retrieve a count of the number of parameters in the collection. You might, for example, use the method to set a count parameter to control the number of times you must loop through the list of parameters. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.BdpConnectionString">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This class allows you to store connection string parameters.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This class allows you to store connection string parameters.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Pooling">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies whether Connection Pooling should be enabled or disabled.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies whether Connection Pooling should be enabled or disabled.
</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.MinPoolSize">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines the minimum number of connections that will be maintained in the connection pool.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The default minimum connection size is 0.
</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.MaxPoolSize">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines the maximum number of connections in the connection pool.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The default maximum size is 100. If GrowOnDemand is False and MaxPoolSize is reached, subsequent connection requests will throw an exception.
</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.ConnectionLifetime">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines the life time of a pooled connection.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">When a connection returns to the pool, its lifetime is checked to see if it has expired. If it has, then the connection is released instead of returned to the pool. The ConnectionLifetime value is in seconds, and the default is 0.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.GrowOnDemand">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies whether the new connection request should grow on demand after a pool reaches the MaxPool Size. 
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Connections that grow on demand will not be returned to the connection pool. Instead, they will be released on BdpConnection.Close().</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Common.DbResolver">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Base class that implements ISQLResolver. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Base class that implements ISQLResolver.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Common.Borland.Data.Common.DbResolver">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Method that implements ISQLResolver.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Method that implements ISQLResolver.
</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.QuotePrefix">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the Prefix Quote char for quoting object names (table names, column names).
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the Prefix Quote char for quoting object names (table names, column names).</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.QuoteSuffix">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the Suffix Quote char for quoting object names (table names, column names).</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the Suffix Quote char for quoting object names (table names, column names).</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.ReadOnly">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines which columns should be excluded from INSERT and UPDATE SQL statements.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determine which columns should be excluded from INSERT and UPDATE SQL statements. For example: autoincrement and server generated columns.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.ExcludeFilter">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines which columns should be excluded from the WHERE clause when UPDATE and DELETE SQL are generated by the resolver.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines which columns should be excluded from the WHERE clause when UPDATE and DELETE SQL are generated by the resolver.
</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Common.Borland.Data.Common.Row">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DataRow that is currently being updated.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DataRow that is currently being updated.
.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ObjectType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the database object types defined for a given data provider.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Databases contain a variety of object types, including tables, columns, indexes, and synonyms. The following table describes the possible database object types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Database</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A physical database of the type supported by the given data provider.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>DataType</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A database data type supported by the database type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Index</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>An index for the given data source.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Package</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>An object containing a collection of types, typically stored procedures.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Procedure</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A stored procedure defined in the provider database type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Role</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A database object defining specific permissions for a particular type of user, such as an administrator or DBA.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Synonym</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A database by another name.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Table</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A table of the type supported by the provider database type.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>UDT</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A user-defined type, such as an Address type, consisting of street, city, state, and postal code.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>View</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A view, which is typically a logical snapshot of one or more tables in a given database.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>User</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A user defined by a DBA and possessing permissions data.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.TableType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the possible types of tables allowable in a target database.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Used by the GetTables method of the ISQLMetaData interface. The following table describes the enums representing allowable table types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Table</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A user table located on the database server.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>View</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A logical representation of one table or multiple joined tables. Often used to restrict access to sensitive data, or for data formatting purposes.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SystemTable</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>One of the restricted system tables that contain data about the database itself.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Synonym</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A table by another name.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>TempTable</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A temporary table, usually created as a way to store database updates prior to committing or rolling back.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Local</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A locally stored table, perhaps used by a database client.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ProcedureType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the type of allowable procedures.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Used by the <method namespace="Borland.Data.Schema" interface="ISQLMetaData">GetProcedures</method> method of the <interface namespace="Borland.Data.Schema">ISQLMetaData</interface> interface. The following table describes the possible procedure types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Procedure</para>
                  
                  </td>
                  
                  <td>
                     
                     <para> A stored procedure.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Function</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A database function.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Package</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A database package containing one or more functions and stored procedures.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SysProcedure</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>A system procedure. You might need database administrator privileges to access system procedures.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ColumnType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the specialized type of the column in the database.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Many databases provide several special types that fulfill specific requirements for setting uniqueness. These include the ROWID type in Oracle or AutoIncrement types in MS SQL Server or MS Access. The following table describes the allowable database column types, other than standard data types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>RowId</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a row ID column type, which is typically a set of auto-generated integers, and which serves as a primary key column. Int32.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>RowVersion</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a version number column type, which is often an auto-generated timestamp, applied as either a creation date or a modification date. Int32.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>AutoIncr</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies an auto-incremented column type, which is typically a set of auto-generated integers of a particular step interval, but does not necessarily serve as a primary key.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Default</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies the default column type for the particular database system.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.IndexType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the type of index in the database.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The type of index can determine how you go about searching and sorting data in your result set or your DataSet. The following table describes the allowable index types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>NonUnique</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a non-unique index, which can be used to speed up searches among sets of data that contain particular groups of interest. For example, you might index an employee table based on Department Number. While this is not the fastest or most efficient index, it can simplify certain SQL statements when trying to count employees by department, or to isolate department members.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Unique</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a unique index, which is not necessarily a primary key index. For example, you might specify a unique index when using the Social Security Number as an index to an employee table.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>PrimaryKey</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a primary key index. This is typically an efficient index type, which uses the primary key constraint in a table as the index target. For example, you might specify the Employee Number in an employee table. The Employee Number is unique, an integer, reasonably short, and each and every employee has one. This makes the Employee Number a good candidate for serving as both the primary key and as an index value.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.SqlCommandTypes">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the type of SQL command or statement.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this enumerator if you need to indicate what type of SQL statement you are using. The following table describes the allowable enumerators.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Select</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a Select statement.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Insert</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies an Insert statement.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Update</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies an Update statement.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Delete</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a Delete statement.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.MetaDataProps">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">An enumerator that defines metadata properties.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>CatalogName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Name of the database catalog.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>DatabaseName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Name of the database.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>DatabaseVersion</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Database version number.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MaxColumnsInSelect</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Maximum number of columns allowed to be returned from a SELECT statement.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MaxColumnsInTable</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Maximum number of columns allowed in a table.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MaxObjectNameLength</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Maximum number of characters allowed in the name of a database object.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MaxRowSize</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Maximum size, in bytes, of a row in a table.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MaxSQLLength</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Maximum length, in characters, allowed for a SQL command.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ObjectName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Name of a database object.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ObjectQuoteChar</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The quote character, if quote characters are used, for example, to delimit strings.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>PackageName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Name of the package.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ProcSupportsCursor</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies whether or not the stored procedure supports the use of a cursor.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ProcSupportsCursors</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies whether or not the stored procedure supports the use of multiple cursors.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>QualifiedName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Fully qualified name of a database object.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>QuotedObjectName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Name of an object that takes a quote character.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SQLEscapeChar</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Escape character used in database SQL statements.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SchemaName</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Name of database schema.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SupportsTransaction</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies whether or not the database supports a transaction.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SupportsTransactions</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies whether or not the database supports multiple transactions.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>TransactionIsoLevel</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Isolation level supported for transactions in the database.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.MetaDataType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the type of object returned in a schema query.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can query the system tables to retrieve a schema description of a particular database. This query returns various database objects. This enumerator contains a list of those object types. The following table describes the <type namespace="Borland.Data.Schema">MetaDataType</type> enumerators.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Element</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Tables</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that returned objects are tables but does not indicate the types of tables.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Columns</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that returned objects are columns but does not indicate the types of columns.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Procedures</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that returned objects are stored procedures but does not indicate the types of procedures, their direction, or other properties. </para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ProcedureColumns</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that returned objects are column names in a stored procedure.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Indices</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that returned objects are table indexes but does not indicate the types of indexes.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>PrimaryKeys</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that returned objects are primary keys for a given table or tables.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ISQLExtendedMetaData">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Interface to retrieve extended metadata.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Interface to retrieve extended metadata.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetForeignKeys">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Return foreign key details for a give table.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Return foreign key details for a give table.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetRelatedObjects">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns all dependent database objects for a given database object.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns all dependent database objects for a given database object.
</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ISQLMetaData">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Provides the means to retrieve database metadata. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The Data Explorer and the component designers in BDP.NET rely on the <class namespace="borland.data.schema">ISQLMetaData</class> interface to get metadata from a particular data source. To make sure that the BDP.NET component designers and the Data Explorer work seamlessly with third-party BDP.NET data sources, developers should implement this interface.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you intend to implement support for a data source not already supported by BDP.NET, you must create a class that implements this interface. A number of design tools implement this interface, which allows them to retrieve metadata from a data source.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetExtendedMetaData">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns an ISQLExtendedMetadata implementation for the provider.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a ISQLExtendedMetadata implementation for the provider.
</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetSchemaCreate">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a schema create object that can be used for schema creation.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetProperty">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the value of one of the metadata properties, given the property name. </para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eMetaOption</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies one of the metadata properties.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>MetaDataOption</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a variable to contain the property value.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Object by Ref</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following table describes the metadata properties. </para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Property</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>CatalogName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a system table name.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>DatabaseName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>DatabaseVersion</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the version number of the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxColumnInSelect</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the number of columns that can be specified in a SELECT statement. The column count starts with the first column. Any columns beyond the limit are not returned.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxColumnsInTable</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the number of columns that can be returned from a table. The column count starts with the first column. Any columns beyond the limit are not returned.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxObjectNameLength</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the number of characters returned of a database object name. Names exceeding this limit are truncated. If database object names are similar, truncating them might result in duplicate names or meaningless names.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxRowSize</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the size of any returned rows. This can be useful if you suspect there might be BLOBs in the rows you are selecting, but you want to protect the performance of your query.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxSQLLength</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the length, in characters, of a SQL statement.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjectQuoteChar</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the quote character to use when delimiting object names containing special characters, such as spaces.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>PackageName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a package.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ProcSupportsCursor</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not a stored procedure supports the use of a cursor. Set to <b>True</b> if it supports a cursor, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ProcSupportsCursors</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not a stored procedure supports the use of multiple cursors. Set to <b>True</b> if it supports cursors, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SQLEscapeChar</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the character to use to delimit escape sequences in SQL statements.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SchemaName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a database schema if different from the DatabaseName.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SupportsTransaction</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not the database can be named in a transaction-based SQL statement. Set to <b>True</b> if it supports a transaction, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SupportsTransactions</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not the database can be named in multiple transaction-based SQL statements. Set to <b>True</b> if it supports transactions, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>TransactionIsoLevel</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the transaction isolation level. Isolation levels supported by BDP.NET include ReadCommitted, RepeatableRead, DirtyRead, and Custom.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.SetProperty">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the metadata property for the database that supplies the result set for your DataSet. </para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eMetaOption</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies one of the allowable properties. See the following table.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>MetaDataOption</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a database object, such as a table, column, view, synonym, or other object.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Object</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following table describes the metadata properties. </para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Property</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>CatalogName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a system table name.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>DatabaseName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>DatabaseVersion</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the version number of the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxColumnInSelect</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the number of columns that can be specified in a SELECT statement. The column count starts with the first column. Any columns beyond the limit are not returned.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxColumnsInTable</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the number of columns that can be returned from a table. The column count starts with the first column. Any columns beyond the limit are not returned.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxObjectNameLength</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the number of characters returned of a database object name. Names exceeding this limit are truncated. If database object names are similar, truncating them might result in duplicate names or meaningless names.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxRowSize</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the size of any returned rows. This can be useful if you suspect there might be BLOBs in the rows you are selecting, but you want to protect the performance of your query.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>MaxSQLLength</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Limits the length, in characters, of a SQL statement.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjectQuoteChar</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the quote character to use when delimiting object names containing special characters, such as spaces.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>PackageName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a package.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ProcSupportsCursor</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not a stored procedure supports the use of a cursor. Set to <b>True</b> if it supports a cursor, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ProcSupportsCursors</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not a stored procedure supports the use of multiple cursors. Set to <b>True</b> if it supports cursors, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SQLEscapeChar</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the character to use to delimit escape sequences in SQL statements.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SchemaName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a database schema if different from the DatabaseName.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SupportsTransaction</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not the database can be named in a transaction-based SQL statement. Set to <b>True</b> if it supports a transaction, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SupportsTransactions</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies whether or not the database can be named in multiple transaction-based SQL statements. Set to <b>True</b> if it supports transactions, otherwise set to <b>False</b>.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>TransactionIsoLevel</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the transaction isolation level. Isolation levels supported by BDP.NET include ReadCommitted, RepeatableRead, DirtyRead, and Custom.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can specify a number of database properties that allow you to control the content of the result sets that you use to build DataTables for DataSets. Your use of these properties might be dependent on the level of support offered for each of them by your target database. For example, some databases don't support long object names, and so the <property namespace="Borland.Data.Schema" class="ISQLMetaData">MaxObjectNameLength</property> property might not be of use. If, however, you suspect that a database supports long object names and your application does not, you can use that property to limit the return value. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetSchemaTable">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable that represents metadata for the given command.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>commandText</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a SQL statement. String.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>commandType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies one of the SQL command types, either TableDirect, Text, or StoredProcedure.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>CommandType</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable object containing the metadata for a given command.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetIndices">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns index information associated with a table.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szTableName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a table.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>uIndexType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of an index type. The index types are Primary Key, NonUnique, and Unique.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IndexType</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetProcedureParams">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a list of stored procedure parameters.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szProcName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the stored procedure name.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szParamName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the parameter name.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable object containing a list of procedure parameters.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can implement this method to return a list of parameters from your stored procedures. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetColumns">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable that represents the columns for a given table.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szTableName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a database table.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szColumnName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a column.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eCol</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the BdpType of the column.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>ColumnType</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable object containing a set of database columns from the given table. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetProcedures">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable object containing a list of stored procedures.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szProcName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a stored procedure name. String.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eProc</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a procedure type. ProcedureType.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>ProcedureType</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following table describes the procedure types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Type</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Function</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A database function.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Package</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A database package containing one or more functions and stored procedures.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Procedure</para>
                        
                  </td>
                        
                  <td>
                           
                     <para> A stored procedure.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>System Procedure</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A system procedure. You might need database administrator privileges to access system procedures.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetTables">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a result set of table names as a DataTable object.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>szTableName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the table name.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eTable</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a table type.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>TableType</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable object containing a list of all tables of the given name or type.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following table describes the possible table types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Type</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Local</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A locally stored table, perhaps used by a database client.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Synonym</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>An alias for a table or view.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>SystemTable</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>One of the restricted system tables that contain data about the database itself.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Table</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A user table located on the database server.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>TempTable</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A temporary table, usually created as a way to store database updates prior to committing or rolling back.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>View</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A logical representation of one table or multiple joined tables. Often used to restrict access to sensitive data.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetObjectList">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a list of database objects given an object type.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eObj</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies an object type.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>This method is not currently implemented for BDP.NET providers. </para>
                  
            </note>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a DataTable object containing a list of objects of the specified type.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following table describes the object types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Object</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Database</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of database names.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>DataType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of data types in the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Table</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of tables in the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>View</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of views in the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Synonym</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of synonyms in the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Procedure</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of procedures in the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>User</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of users defined for the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Role</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of roles defined for the database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>UDT</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of user-defined types.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Package</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Returns a list of packages defined in the database.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ISQLSchemaCreate">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Provides methods used by the Data Explorer to create schema objects.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can create an implementation of this interface to create a database schema in your own provider. This interface provides methods to create and drop all relevant database objects.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.WriteSQLTypeMapping">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Write the current or default SQL type mapping between data sources into a XML document.
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Write the current or default SQL type mapping between data sources into a XML document.
</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.ReadSQLTypeMapping">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Loads SQL type mapping between datasources from an XML document and uses the mapping for Data migration.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Loads SQL type mapping between datasources from an XML document and uses the mapping for Data migration.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.FillSQLTypeMapping">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Fills the created schema using the column type mapping in the data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following parameters determine the destination and state of the created schema.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Destination</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Name of the DataSet that will represent the new schema.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>bDefault</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Sets the schema as the default, if <b>True</b>.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.DropObject">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Deletes the specified object from the schema.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following parameters specify the object to drop:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>One of the object types defined in the <type namespace="Borland.Data.Schema">ObjectTypes</type> enum.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjectName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the object.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>BaseName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The base name of the object.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.CreateObject">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates the given object.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This overloaded method gets the DDL for a given data source based on the following parameters:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>One of the object types defined in the <type namespace="Borland.Data.Schema">ObjectTypes</type> enum.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjectName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the object.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>BaseName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The base name of the object.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>table</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the DataSet data table.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>BdpColumns</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>An instance of a <class namespace="Borland.Data.Provider">BdpColumnCollection</class>.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetDDL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the DDL for the given object.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This overloaded method gets the DDL for a given data source based on the following parameters:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>One of the object types defined in the <type namespace="Borland.Data.Schema">ObjectTypes</type> enum.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ObjectName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the object.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>BaseName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The base name of the object.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>table</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The name of the DataSet data table.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>BdpColumns</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>An instance of a <class namespace="Borland.Data.Provider">BdpColumnCollection</class>.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetDataTypes">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the datatypes of the current object.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.SchemaName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a schema name as a string.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If a schema name is not specified, all of the available objects for the current user login are listed. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.BatchExecute">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If <b>True</b>, all changes are committed as a batch.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If <b>False</b>, commits changes as they occur.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.AutoCommitDDL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If <b>True</b>, commits the changed DDL automatically, rather than waiting for user confirmation.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If <b>False</b>, changes must be committed explicitly by the user.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ISQLDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <ide type="frame">Data Explorer</ide> uses this interface to get information about a specific data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <ide type="frame">Data Explorer</ide> displays the objects in your data sources, including tables, columns, indexes, stored procedures, and more. If you implement the runtime interfaces to support your own specific data sources, and you want those data sources to be accessible from the <ide type="frame">Data Explorer</ide>, you must implement this interface.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you intend to implement support for a data source not already supported by BDP.NET, you must create a class that implements this interface. <class namespace="Borland.Data.Provider">BdpCommandBuilder</class> and other design tools implement this interface.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetDbObjectTypes">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the database object types defined in a given data provider.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a string array containing the database object types defined in a given provider.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Databases contain a variety of object types, including tables, columns, indexes, and synonyms. The following table describes the possible database object types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Object</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Database</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A physical database of the type supported by the given data provider.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>DataType</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A database data type supported by the database type.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Table</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A table of the type supported by the provider database type.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>View</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A view, which is typically a logical snapshot of one or more tables in a given database.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Synonym</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A database by another name.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Procedure</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A stored procedure defined in the provider database type.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>User</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A user defined by a DBA and possessing permissions data.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Role</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A database object defining specific permissions for a particular type of user, such as an administrator or DBA.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>UDT</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A user-defined type, such as an Address type, consisting of street, city, state, and postal code.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Package</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>An object containing a collection of types, typically stored procedures.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetConnections">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the connection names you have defined for a given data provider.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ProviderName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a Borland Data Provider. This can be one of the Borland-supplied providers or one of your own construction.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns connection names for a given provider to a string array.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetProviders">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a list of available data providers.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a string array containing a list of available data providers.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="T:Borland.Data.Schema.ISQLResolver">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Provider">BdpCommandBuilder</class> relies on this interface to resolve updates to the database.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Component designers such as the <ide type="dialog">CommandText Editor</ide> generate optimal SQL by using the methods implemented in this interface. However, the SQL that is auto-generated by the BdpCommandBuilder includes all fields in any given row. Take the UpdateCommand, for example. If UpdateMode is set to All, the data provider updates all changed records, and every field in each record, based on the SQL that is auto-generated for the command by the BdpCommandBuilder. You can modify the SQL statement when you implement this interface, by changing the SQL statements directly.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you intend to implement support for a data source not already supported by BDP.NET, you must create a class that implements this interface. The <class namespace="Borland.Data.Provider">BdpCommandBuilder</class> implements this interface, which allows it to create and execute commands against a data source, including updates to the data source.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetRefreshSQL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the SQL needed to refresh a single record from the database server. 
</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">For GetRefreshSQL to work correctly, there needs to be a primary key or unique key.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetSelectSQL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a Select statement for the given connection and table.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Conn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a connection string.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IDbConnection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>columns</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a DataRowCollection of DataSet columns.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>DataRowCollection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>TableName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a table name in the database.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This method allows you to retrieve a representative query that would be used to build the target database table, given a valid connection and table name. You can modify this statement to exclude certain columns, however. The statement is constructed using every column in the target table. Therefore, you might consider how you want your selects to occur and what level of detail you are seeking. Operations against full rows, even though some fields in a row may be irrelevant to your use, can result in decreased performance. Some applications, such as real-time applications, may gain performance benefits if you optimize your SQL statements to exclude unnecessary columns.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetDeleteSQL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns a Delete statement for a given table.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Conn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a connection string.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IDbConnection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Command</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The SQL Delete statement you want to apply to the database table. This is a user-defined statement that varies from the auto-generated statement derived from using the <ide type="dialog">Configure Data Adapter</ide> dialog.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IDbCommand object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>columns</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A <class namespace="Borland.Data.Provider">DataRowCollection</class> indicating the rows in the DataSet that are to be used for the delete.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>DataRowCollection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>TableName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the target table name in the database.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>UpdateMode</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>One of two values for the <type namespace="Borland.Data.Provider">BdpUpdateMode</type>, either <b>all</b> or <b>key</b>.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Valuetype</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetUpdateSQL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns an Update statement for a given table.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Conn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a connection string.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IDbConnection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Command</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>The SQL Update command you want to apply to the database table.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IDbCommand object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>columns</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A <class namespace="Borland.Data.Provider">DataRowCollection</class> indicating the rows in the DataSet that are to be used for the update.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>DataRowCollection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>TableName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a table name in the database.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>UpdateMode</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>One of two values for the <type namespace="Borland.Data.Provider">BdpUpdateMode</type>, either <b>all</b> or <b>key</b>.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Valuetype</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This method returns a representative Update statement for a given connection, command, columns, table name, and update mode. You can modify this statement to exclude certain columns. By default, the statement is constructed to use every column in the target table. Therefore, you might consider how you want your updates to occur and to what level of detail. Operations against full rows, even when some fields in a row do not require updating, can result in decreased performance.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Schema.Borland.Data.Schema.GetInsertSQL">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns an Insert statement for the given table.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Conn</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a connection string.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IDbConnection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>Command</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a user-defined SQL statement to use when inserting new records into the database, based on application or DataSet operations.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>IDbCommand object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>columns</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a DataRowCollection of DataSet columns that are to be used for the insert.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>DataRowCollection object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>TableName</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies a table name into which the records are to be inserted in the database.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>String</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This method returns a representative Insert statement based on the structure of the target database table. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.QuotePrefix">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the beginning character to use when specifying database object names.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the beginning character or characters to use when specifying database object names, (for example, tables or columns), that contain characters such as spaces.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.QuoteSuffix">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the ending character to use when specifying database object names. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Gets or sets the ending character or characters to use when specifying database object names, (for example, tables or columns), that contain characters such as spaces.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.ReadOnly">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies whether the application will be able to update the tables and other metadata in the database.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.ExcludeFilter">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a string to be excluded when resolving data.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Schema.Borland.Data.Schema.Row">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The current data row.</para>
         </summary>
         <comments/>
      </member>
   </members>
</doc>