<?xml version="1.0" encoding="UTF-8"?>
<doc>
   <assembly>Borland.Data.Web</assembly>
   <members>
      <member name="T:Borland.Data.Web.IDBWebDataLink">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Interface that provides access to the <property namespace="Borland.Data.Web">DBDataSource</property> and <property namespace="Borland.Data.Web">TableName</property> properties for all controls.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <interface namespace="Borland.Data.Web">IDBWebDataLink</interface> interface provides the getters and setters for the <property namespace="Borland.Data.Web">DBDataSource</property> and <property namespace="Borland.Data.Web">TableName</property> for all controls. The <property namespace="Borland.Data.Web">DBDataSource</property> property returns a class instance that specifies a <class namespace="Borland.Data.Web">DBWebDataSource</class> instance. The <property namespace="Borland.Data.Web">TableName</property> property returns a string containing a <property namespace="borland.data.web" class="idbwebdatalink">TableName</property> from the dataset pointed at by the <property namespace="Borland.Data.Web">DBDataSource</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.IDBWebColumnLink">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">An interface that provides access to the <property namespace="Borland.Data.Web" interface="IDBWebColumnLink">ColumnName</property> property for controls that retrieve data from a specific column.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebImage">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data-aware image control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Supports standard Web graphics files, including .jpeg, .gif, .bmp, and .png files. When connected to a data source by way of the <property namespace="Borland.Data.Web" class="DBWebImage">DBDataSource</property> and <property namespace="Borland.Data.Web" class="DBWebImage">TableName</property> properties, its <property class="DBWebImage" namespace="Borland.Data.Web">ColumnName</property> property is populated with names of BLOB columns, if any are available. Only BLOB (byte[]) fields are valid. If the image is valid, it is displayed both at designtime and at runtime.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebImage">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebImage</class> object, which is a data-aware image control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebimage">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebimage">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the column that changes are set to.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebImage">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebImage">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebImage">DBDataSource</property> and your <property class="DBWebImage" namespace="Borland.Data.Web">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebImage">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebImage">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application. In terms of BLOB files, if there is a BLOB column in the dataset, the <property namespace="Borland.Data.Web" class="DBWebImage">ColumnName</property> property is populated with the name of that column.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UseCacheFile">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A Boolean that indicates whether or not the <class namespace="Borland.Data.Web">DBWebImage</class> control should display a cached image file.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If set to <b>True</b>, the <class namespace="Borland.Data.Web">DBWebImage</class> displays the cached image file. If <b>False</b>, it refreshes the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> and retrieves the image file based on the value in the refreshed <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebSound">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Data-aware web control that plays a sound file.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Web">DBWebSound</class> control allows you to specify a string or a byte array. The string is a location pointing to a valid sound file, such as an .mp3 or .wav file.The byte array is a BLOB stored in a database column. You cannot specify a byte array directly. It must be stored as a BLOB in a database record.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The sound control exposes the default sound control on your system.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">There are a number of supported sound formats, including .wav, .mp3, .wma, and .m4p. If your application includes files of different formats and you find that some of the formats do not seem to invoke the media player, it could be that your file associations for the different sound formats are linked to different players. Some of these players may not be supported. Currently, the <class namespace="Borland.Data.Web">DBWebSound</class> control works with the Windows Media Player 9 Series, QuickTime Player 6.5.1, and the Real Player 10. If you have problems with multiple formats in the same application you can try to change the file association for that file type to a player that does work in your application, or you can use a conversion utility to convert the file to a format that works.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Web">DBWebSound</class> control works in any browser that supports the &lt;embed src&gt; tag. Older browsers, prior to IE 4.0 or Mozilla 2.1 may not display the control properly.</para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>If the <property namespace="Borland.Data.Web" class="DBWebSound">Visible</property> property is set to <b>False</b>, the sound control does not play, even if you set the <property namespace="Borland.Data.Web" class="DBWebSound">AutoStart</property> property to <b>True</b>.</para>
            
            </note>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebSound">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Instantiates a new data-aware sound control for use in ASP.NET web applications.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">In the Delphi language, when you drop a <class namespace="Borland.Data.Web">DBWebSound</class> control on your form, the constructor is automatically built for you, as follows.</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="DelphiNet">DBWebSound1: Borland.Data.Web.DBWebSound;</codeBlock>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the control to a given column of the correct data type.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A major benefit of the <varTechnology name="DBWeb"/> is that they do not require you to manually code a <method namespace="borland.data.web" class="dbwebsound">DataBind</method> statement.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Width">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the width of the panel on which the <class namespace="Borland.Data.Web">DBWebSound</class> control sits.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can only set the minimum width of the control to the minimum set by the panel on which the control sits. The minimum default width for the panel is 150 pixels. The width and height of the control is dictated by the default size of your media player.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Height">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the height in pixels of the <class namespace="Borland.Data.Web">DBWebSound</class> control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Currently, the <class namespace="Borland.Data.Web">DBWebSound</class> control is contained within the bounds of a panel object. As a consequence, you cannot decrease the size of the control smaller than the panel's default value of 20 pixels. The width and height of the control is dictated by the default size of your media player.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Loop">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies how many times the sound should loop.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Most commonly used in conjunction with the <property namespace="Borland.Data.Web" class="DBWebSound">AutoStart</property> property. If you set <property namespace="Borland.Data.Web" class="DBWebSound">Loop</property> to <b>True</b>, the sound loops continuously until manually stopped by the user. The default value for this property is <b>False</b> which means the sounds plays once, then stops. If set to <b>True</b>, the sound plays indefinitely, or until stopped by the user.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.AutoStart">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Indicates that the sound file is to begin playing as soon as the web page loads.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you set <property namespace="Borland.Data.Web" class="DBWebSound">AutoStart</property> to <b>True</b>, the sound starts playing even at design time. You should click the stop or pause button on the visual sound control at design time before running your application. Otherwise, it is possible that two sound streams will play during runtime, at least while you are in your testing phase.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the table containing a BLOB or a string URL to a sound file.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebSound">TableName</property> property is dictated by the values populating the <property namespace="Borland.Data.Web" class="DBWebSound">TableName</property> property drop down list from the <property namespace="Borland.Data.Web" class="DBWebDataSource">DBDataSource</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the name of the column that the <class namespace="Borland.Data.Web">DBWebSound</class> control binds to.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The column can contain strings that are paths to the location of each video file on disk, or they can be Byte Array type columns, containing BLOB data.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UseCacheFile">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies that the sound should be cached on the server for subsequent calls to the sound control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The contents of the field are written to disk prior to sending the sound stream to the client. This property is only valid when the data type is Byte Array. If you set the property to <b>True</b> when the column contains a string, the property has no effect. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebVideo">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data-aware web control that allows you to stream video content.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Web">DBWebVideo</class> control is contained within the context of a panel. You can size the control based on the defaults of the panel. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A call to the video control, like a call to the sound control, initiates an instance of your system default media player. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Web">DBWebVideo</class> control allows you to specify a string or a byte array. The string is a location pointing to a valid video file, such as an AVI or MPEG file. The byte array is a BLOB stored in a database column. You cannot specify a byte array directly on disk. It must be stored as a BLOB in a database record. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Web">DBWebVideo</class> control works in any browser that supports the &lt;embed src&gt; tag. There are a number of supported video formats, including .avi and .mpeg. If your application includes files of different formats and you find that some of the formats do not invoke the media player, it could be that your file associations for the different sound formats are linked to different players. Some of these players may not be supported. Currently, the <class namespace="Borland.Data.Web">DBWebVideo</class> control works with the Windows Media Player 9 Series, QuickTime Player 6.5.1, and the Real Player 10. If you have problems with multiple formats in the same application you can try to change the file association for that file type to a player that does work in your application, or you can use a conversion utility to convert the file to a format that works.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Web">DBWebVideo</class> control works in any browser that supports the &lt;Image dynsrc&gt; tag. Older browsers, prior to IE 4.0 or Mozilla 2.1 may not display the control properly.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebVideo">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebVideo</class> control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the control to a given column of the correct data type.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Width">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the width, in pixels, of the <class namespace="Borland.Data.Web">DBWebVideo</class> control, based on the default size of the panel object containing the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can also drag the object handles to resize the object. When you resize the object in this way, the new width appears in the property text box.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Height">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the height, in pixels, of the <class namespace="Borland.Data.Web">DBWebVideo</class> control, based on the default size of the panel object containing the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Loops">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies how many times the video should play.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The default value of this property is <b>-1</b>, which means the video will play indefinitely. If you set the <property namespace="borland.data.web" class="dbwebvideo">Loops</property> property to zero (0) or 1, the video control plays the video once, then stops. </para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>Sometimes the behavior might not be what you expect, if you set the <property namespace="Borland.Data.Web" class="DBWebVideo">Loops</property> property to a specific number higher than 1, and set the <property namespace="Borland.Data.Web" class="DBWebVideo">StartMode</property> property to <keyinput>eMouseOver</keyinput>. If you set <property namespace="borland.data.web" class="dbwebvideo">Loops</property> to 2, and <property namespace="Borland.Data.Web" class="DBWebVideo">StartMode</property> to <keyinput>eMouseOver</keyinput>, anytime you move the mouse over the video control, when it is activated, the video will play twice. If you move the mouse cursor over the video control again, the video plays twice again. In other words, you do not need to reactivate the video control in this case. It will stay active until you select another video or change the <property namespace="Borland.Data.Web" class="DBWebVideo">StartMode</property> property programmatically at runtime.</para>
                  
            </note>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.StartMode">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies what type of event will initiate the video stream.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The default value for this property is <b>ePageOpen</b>.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Value</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ePageOpen</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Video starts playing as soon as the page loads.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>eMouseOver</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Video starts when the user moves the mouse pointer over the video control. The video will only start with a mouseover action, even if the user selects the video with another control, such as a list box control .</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.AlternateText">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a text description that appears on the client web page, if the end-user does not have a media control enabled.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If the link to the sound file is invalid, the <property namespace="Borland.Data.Web" class="DBWebVideo">AlternateText</property> value displays in the location of the control. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebListBox">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebvideo">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="Borland.Data.Web" class="DBWebVideo">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the name of the column that the <class namespace="Borland.Data.Web">DBWebVideo</class> control binds to.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The column can contain strings that are paths to the location of each video file on disk, or they can be byte array type columns, containing BLOB data.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UseCacheFile">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies that contents of a byte array field are to be written to disk prior to sending to the client.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> This property is only valid when the data type is Byte Array. If you set the property to <b>True</b> when the column contains a string, the property has no effect. If valid, the contents of field are written to disk prior to sending them to the client.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.ImageType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the file type of an image.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The valid image types are:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Data Type</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>.bmp</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Microsoft Windows Bitmap</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>.gif</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>CompuServe Graphics Interchange Format</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>.jpg</para>
                  
                  </td>
                  
                  <td>
                     
                     <para> Joint Photographic Experts Group</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>.png</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Portable Network Graphics</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>None</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>No file type specified.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.AcceptColumnType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">An enum that indicates the column type for BLOBs.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The enum provides the following values:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Value</th>
                  
                  <th>Description</th>
                  
                  <th>Type</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>actTextBlobAndString</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The column accepts <property namespace="borland.data.web" class="dbwebnavigator">Text</property> BLOBs and Strings.</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>int32</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>actTextBlobOnly</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>The column accepts only <property namespace="borland.data.web" class="dbwebnavigator">Text</property> BLOBs.</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>int32</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebMemo">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data-aware Memo text box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This control is derived from the ASP.NET <class namespace="System.Web.UI.WebControls">TextBox</class> control. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebMemo">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebMemo</class> object, which is a data-aware memo field control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebmemo">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebmemo">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ValidColumnType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies what type of data can appear in the memo field.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following values are valid:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Value</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>actTextBlobOnly</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Default. Allows only a <property namespace="borland.data.web" class="dbwebnavigator">Text</property> BLOB field (char[]) to appear in the memo field.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>actTextBlobAndString</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Allows both <property namespace="borland.data.web" class="dbwebnavigator">Text</property> BLOB fields (char[]) and String fields to appear in the memo field.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.LabelPosition">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Indicates label position on a control.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Type</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>LabelAbove</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Positions the label above the control.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>LabelBelow</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Positions the label below the control.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>LabelToLeft</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Positions the label to the left of the control.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>LabelToRight</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Positions the label to the right of the control.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebLabeledTextBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data-aware labeled text box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends the .NET Framework <class namespace="System.Web.UI.WebControls">WebControl</class> object. The <class namespace="Borland.Data.Web">DBWebLabeledTextBox</class> object is like any other text box, except that it contains a property that allows you to set a caption or label, and to set the location of the label. The positioned caption is visible at designtime.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This is a composite control that combines the features of an ASP.NET label and a <class namespace="Borland.Data.Web">DBWebTextBox</class>. To use this class, set the <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property>, <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property>, and <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> properties to achieve read-write binding to the column specified in the ColumnName property.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">All column types are valid except BLOB fields. Only non-BLOB fields appear in the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> drop-down list box.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebLabeledTextBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebLabeledTextBox</class> object, which is a data aware text box control that contains an attached and positionable label.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.ControlID">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Names the control, given a string.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the <method namespace="borland.data.web" class="dbweblabeledtextbox">ControlID</method> is <i>DBWebLabeledTextBox1</i>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbweblabeledtextbox">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbweblabeledtextbox">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Caption">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the string caption that is to appear with the <class namespace="Borland.Data.Web">DBWebLabeledTextBox</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">When a <property namespace="Borland.Data.Web" class="DBWebLabeledTextBox">ColumnName</property> is set at designtime, the <property namespace="Borland.Data.Web" class="DBWebLabeledTextBox">Caption</property> is automatically set to the <property namespace="Borland.Data.Web" class="DBWebLabeledTextBox">ColumnName</property>. You can change this to any text you would like to see displayed for that column.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.CaptionPosition">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the position of the caption.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The possible positions are:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Position</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>LabelToLeft</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Positions the label to the left of the text box.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>LabelAbove</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Positions the label above the text box, flush left.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>LabelToRight</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Positions the label to the right of the text box.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>LabelBelow</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Positions the label below the text box, flush left.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TextBoxPortion">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a percentage of the total text box length that the text box itself should occupy, while the label occupies the remainder of the length.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This property is only valid when the <property namespace="Borland.Data.Web" class="DBWebLabeledTextBox">CaptionPosition</property> property is set to <b>LabelToLeft</b> or <b>LabelToRight</b>. The length of the text box and label together are determined by the total length of the text box and the percentage you set for this property. For example, if you create a <class namespace="Borland.Data.Web">DBWebLabeledTextBox</class> that is two inches long and set the <property namespace="Borland.Data.Web" class="DBWebLabeledTextBox">TextBoxPortion</property> property to 50%, the text box is resized to one inch with the label taking up another inch, whether or not the number of letters in the label string actually fill that space. This behavior is visible at designtime.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.CaptionBackColor">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the background color behind the caption string.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.CaptionForeColor">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the color of the caption text.</para>
         </summary>
         <comments/>
      </member>
      <member name="T:Borland.Data.Web.DBWebCalendar">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data-aware web calendar object.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends the .NET Framework web control <class namespace="System.Web.UI.WebControls">Calendar</class> object. By default, the <class namespace="Borland.Data.Web">DBWebCalendar</class> control appears as a complete month, though you can change this by way of a number of properties available in the <ide type="frame">Object Inspector</ide>. You can set different styles for different elements of the calendar, including color highlighting of selected dates, borders, and headers.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set the <property namespace="Borland.Data.Web" class="DBWebCalendar">DBDataSource</property>, <property namespace="Borland.Data.Web" class="DBWebCalendar">TableName</property>, and <property namespace="Borland.Data.Web" class="DBWebCalendar">ColumnName</property> properties to achieve read-write access to that column value using the <class namespace="Borland.Data.Web">DBWebCalendar</class> control. At runtime, changing the DateValues in the <class namespace="Borland.Data.Web">DBWebCalendar</class> automatically writes those changes to the DataSet.</para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>Only binary DateTime fields are valid for this control, and those are the only type of fields that will appear in the <property namespace="Borland.Data.Web" class="DBWebCalendar">ColumnName</property> drop down list box.</para>
            
            </note>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebCalendar">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebCalendar</class> object.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can use the data aware <class namespace="Borland.Data.Web">DBWebCalendar</class> control to display any month of a calendar on a Web page. The user can choose and highlight dates and can display the next or previous months.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can bind the calendar to a dataset that contains at least one DateTime column. When you set the <property namespace="Borland.Data.Web" class="DBWebCalendar">DBDataSource</property> and <property namespace="Borland.Data.Web" class="DBWebCalendar">Table</property> properties, any DateTime columns appear in the <property class="DBWebCalendar" namespace="Borland.Data.Web">ColumnName</property> property list.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> You can specify whether the <class namespace="Borland.Data.Web">DBWebCalendar</class> control allows you to select a single day, week, or entire month by setting the <property namespace="System.Web.UI.WebControls" class="Calendar">SelectionMode</property> property. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By using the Style properties, you can customize the appearance of various <class namespace="Borland.Data.Web">DBWebCalendar</class> control elements, including headers, titles, selection colors, and more.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebcalendar">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebcalendar">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the column in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is linked to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebCalendar">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebCalendar">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebCalendar">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebCalendar">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebCalendar">ColumnName</property> property will display HIRE_DATE from the dataset. Any changes you make to the <class namespace="Borland.Data.Web">DBWebCalendar</class> item, in this example, will update the HIRE-DATE field in the DataTable of the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.IDBWebLookupColumnLink">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Interface that provides access to the <property namespace="Borland.Data.Web">LookupTableName</property>, <property namespace="Borland.Data.Web">DataTextField</property>, and <property namespace="Borland.Data.Web">DataValueField</property> properties for lookup controls.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.LookupTableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the lookup table that contains list items for the drop down list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This can be a different table than the DataTable you specify as a data source. When you identify the <class namespace="Borland.Data.Web">DBDataSource</class>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">TableName</property>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property>, and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>, an in-memory table is constructed and populated with the values retrieved from your data source based on the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property> and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>. By default, the table is named <b>Table</b>. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The most common structure to specify, other than a DataTable, is a View.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataTextField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a column in an in-memory DataTable, whose values are to be displayed as list items in the list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can specify any available column from your <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> for this property, regardless of data type.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataValueField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a particular value for each item in the list.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The column you choose determines how you can use this information. For example, it might be more useful to choose a column that is both unique and numeric, such as an employee number or social security number for a list of employees, than to choose an alphanumeric column with duplicate values, such as FIRST_NAME. On the other hand, you might have use for a data value field that uses department number, despite its use of duplicates. The <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property> stores a value attribute for each list item in the <b>.asmx</b> file. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.OnScrollEventArgs">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Provides the means to pass information whenever a scroll event occurs on a data aware web control that scrolls.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Provides a way to signal what action to take when a user scrolls a data aware web control, such as a grid, list box, or a multiline text box.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.CurrentRow">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the currently selected row in the control.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.PriorRow">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the row that was selected prior to the current row.</para>
         </summary>
         <comments/>
      </member>
      <member name="T:Borland.Data.Web.WebControlEventArgs">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Provides a way to pass event information.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends System.EventArgs.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.WebControlEventArgs">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of the <method namespace="borland.data.web" class="webcontroleventargs">WebControlEventArgs</method> class.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataSet">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to be updated when a request to update occurs.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Because .NET DataSets can contain multiple DataTables, all tables in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> are updated, regardless of whether or not they have been changed.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebButtonClickArgs">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Defines the arguments for DBWeb buttons.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Primarily used with the <class namespace="Borland.Data.Web">DBWebNavigator</class> buttons, to define arguments that will be passed to the <event namespace="Borland.Data.Web" class="DBWebNavigator">Click</event> event.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebButtonClickArgs">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of the DBWeb button <event namespace="Borland.Data.Web" class="DBWebNavigator">Click</event> event arguments.</para>
         </summary>
         <comments/>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableOrView">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The data source object that is connected to the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <class namespace="Borland.Data.Web">DBWebNavigator</class>
                     
               <event namespace="Borland.Data.Web" class="DBWebNavigator">Click</event> event uses this property, along with the <property namespace="Borland.Data.Web" class="DBWebButtonClickArgs">ButtonName</property> property, as arguments. When you write code to handle actions as a result of a button click, this property provides you with the name of the DataTable or DataView that serves as the data source for the active <class namespace="Borland.Data.Web">DBWebNavigator</class>. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ButtonName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Provides the name of the clicked button in the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments/>
      </member>
      <member name="T:Borland.Data.Web.OnScrollEvent">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Indicates that the user has scrolled from one item to another in the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends the .NET <class namespace="System">MulticastDelegate</class> class.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.OnScrollEvent">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Instantiates a new <class namespace="Borland.Data.Web">OnScrollEvent</class>.</para>
         </summary>
         <comments/>
      </member>
      <member name="T:Borland.Data.Web.DBWebGrid">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data aware grid control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">DBWebGrid is inherited from the ASP.NET DataGrid and supports all of the functionality of the base control, including AutoFormat and PropertyBuilder verbs. The <class namespace="Borland.Data.Web">DBWebGrid</class> allows you to connect to a data table and to display both at designtime and runtime the columns in your table. To view the data at designtime, set your data provider's Active property to True, then set connect the grid's <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> and <property namespace="Borland.Data.Web" class="DBWebGrid">TableName</property> properties to a DBWebDataSource that is connected to a DataSet. The data populates the grid in the Designer.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The control allows you to edit a row at a time. It provides paging capabilities allowing you to set paging to a certain number of rows. The control recognizes key constraints. In effect, the control provides all standard DataGrid properties.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can use the Property Builder to select columns and to set the order in which they appear in the grid. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebGrid">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebGrid</class> control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the data source to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.UpdatePageIndex">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Manages paging of the <class namespace="Borland.Data.Web">DBWebGrid</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The only time you might need to call this method is if you have set <property namespace="Borland.Data.Web" class="DBWebGrid">HandlePagingEvents</property> to <b>False</b> so that you can handle the paging event yourself, but then want to revert to the default paging behavior at some point. You could then make a call to <method namespace="Borland.Data.Web" class="DBWebGrid">UpdatePageIndex</method>, which performs the default paging as it behaves when <property namespace="Borland.Data.Web" class="DBWebGrid">HandlePagingEvents</property> is <b>True</b>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebgrid">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebgrid">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You need to create a data adapter and connection to a data source before you can provide this value. You can create a valid data source connection using one of the ADO.NET providers or the BDP.NET providers. For instance, you can drag-and-drop a table from the <ide type="frame">Data Explorer</ide> to create a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> and <class namespace="Borland.Data.Provider">BdpConnection</class>. You can then generate a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, which becomes the value you need to indicate for the <property namespace="Borland.Data.Web" class="DBWebDataSource">DBDataSource</property> property.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This property can be set to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, a DataTable, or a DataView. All of the tables associated with a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, or the DataTable's or DataView's <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, can connect <varTechnology name="DBWeb"/> to the <class namespace="Borland.Data.Web">DBWebDataSource</class>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ReadOnly">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Indicates whether or not the <class namespace="Borland.Data.Web">DBWebGrid</class> control is editable.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If set to <b>True</b>, the grid is not editable. Set to <b>False</b> by default, meaning the grid is editable by default.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.HandlePagingEvents">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Indicates whether the <event namespace="Borland.Data.Web" class="DBWebGrid">OnPageIndexChanged</event> event should be handled automatically or by the user.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default, meaning that the <event namespace="Borland.Data.Web" class="DBWebGrid">OnPageIndexChanged</event> event is handled automatically. Set to <b>False</b> if you intend to handle the event yourself.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> If True, the DBWebGrid takes care of setting the selected row based on paging changes. If <property namespace="Borland.Data.Web">PagerStyle</property>.Mode is set to NextPrev, then the grid moves the currently selected row to the next or previous page. If <property namespace="Borland.Data.Web">PagerStyle</property>.Mode is NumericPages, then it moves to the correct page.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If False, you take responsibility for handling these events. If you want to continue with the default behavior, you can call the public method <method namespace="Borland.Data.Web" class="DBWebGrid">UpdatePageIndex</method>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.AllowPaging">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies that the grid control allows paging if the number of records in the result set exceeds the number specified as visible.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you set this property, paging will automatically occur, if the number of records returned exceeds the default number specified as visible. You can change the number of records shown per page.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.HandleColumnEvents">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Indicates whether certain column events should be handled automatically or by the user.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default, meaning that the <class namespace="Borland.Data.Web">DBWebGrid</class> events <event namespace="Borland.Data.Web" class="DBWebGrid">OnEditCommand</event> and <event namespace="Borland.Data.Web" class="DBWebGrid">OnCancelCommand</event> are handled automatically. Set to <b>False</b> if you intend to handle these yourself. However, by default, when you add the linked columns <b>Delete</b>, <b>Edit</b>, <b>Update</b>, and <b>Cancel</b> to the grid, you do not need to add code. By default, hitting the <b>Delete</b> column link deletes the selected row, hitting <b>Edit</b> makes the selected row the current row, hitting <b>Update</b> updates any changes to the row, and hitting <b>Cancel</b> cancels the changes. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebCheckBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data-aware check box control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This class implements the .NET Framework <class namespace="System.Web.UI.WebControls">check box</class> base class. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set the <property namespace="Borland.Data.Web" class="DBWebCheckBox">DBDataSource</property>, <property namespace="Borland.Data.Web" class="DBWebCheckBox">TableName</property>, and <property namespace="Borland.Data.Web" class="DBWebCheckBox">ColumnName</property> properties to achieve read-write access to that column value using the <class namespace="Borland.Data.Web">DBWebCheckBox</class> control. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Only Boolean fields and String fields are valid. String fields are expected to contain values of <b>true</b> or <b>false</b>, <b>yes</b> or <b>no</b>, and <b>on</b> or <b>off</b>.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebCheckBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of the <class namespace="Borland.Data.Web">DBWebCheckBox</class> control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebcheckbox">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebcheckbox">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.NavigatorButtonType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the type of button that displays in the <class namespace="Borland.Data.Web">DBWebNavigator</class> control.</para>
         </summary>
         <comments>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Type</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ButtonIcons</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Displays icons based on image files you specify. By default, the image files provided by the IDE are used. A user can also specify any valid image files. For size consideration, the .gif format is the file type of choice. Each button property contains the name of an associated image file. </para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ButtonSymbols</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Displays a standard set of symbols, such as the greater than symbol (&gt;) for Next, and the less than symbol (&lt;) for Previous. The button symbols are <b>|&lt;</b> to go to first record, <b>&lt;&lt;</b> to page back, <b>&gt;&gt;</b> to page forward, <b>&gt;|</b> to go to the last record, <b>+</b> to insert a record, <b>-</b> to delete a record, <b>[&gt;]</b> to apply the data to the server, <b>[&lt;]</b> to refresh the data, <b>X</b> to undo, and <b>XX</b> to undo all.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>ButtonText</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Displays text labels describing the operation of each button. These labels are First, Previous, Next, Last, Insert, Delete, Apply, Refresh, Undo, and UndoAll.</para>
                  
                  </td>
               
               </tr>
            
            </table>
            <list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="bullet">
               
               <item>
                  
                  <para>The Insert button inserts a new row into the table.</para>
               
               </item>
               
               <item>
                  
                  <para>The Delete button deletes the currently selected row.</para>
               
               </item>
               
               <item>
                  
                  <para>The Apply button applies changes by calling the <class namespace="Borland.Data.Web">DBWebDataSource</class>
                     
                     <event namespace="Borland.Data.Web" class="DBWebDataSource">OnApplyChangesRequest</event> event.</para>
               
               </item>
               
               <item>
                  
                  <para>The Refresh button refreshes data from the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. This button is only relevant if <class namespace="Borland.Data.Web">DBWebDataSource</class>. <property namespace="Borland.Data.Web" class="DBWebDataSource">AutoRefresh</property> is set to <b>False</b>.</para>
               
               </item>
               
               <item>
                  
                  <para>The Undo button undoes the last change.</para>
               
               </item>
               
               <item>
                  
                  <para>The UndoAll button undoes all changes. If connected to a master table, it removes all changes to the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. If connected to a detail table, it only removes changes to that detail table.</para>
               
               </item>
            
            </list>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebNavigator">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data aware navigator control, which is generally used in conjunction with other controls, such as a grid control, to facilitate navigation between records in a data set.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends the .NET <class namespace="System.Web.UI.WebControls">WebControl</class> control. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This control operates very much like the Delphi 7 TDBNavigator control. It connects to DataSets, DataTables, and DataViews. It provides buttons for Next, Previous, First, Last, Insert, Delete, Apply Changes, Refresh, Undo, and UndoAll functions. Refresh, Undo, and UndoAll are data-state aware. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The control follows certain rules for runtime enabling:</para>
            <list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="bullet">
               
               <item>
                  
                  <para>If the table has no rows, the Delete, First, Last, and Next buttons are not enabled.</para>
               
               </item>
               
               <item>
                  
                  <para>If no changes have been made to the table, the Undo and UndoAll buttons are not enabled.</para>
               
               </item>
               
               <item>
                  
                  <para>If changes have been made to the table, the Refresh button is not enabled.</para>
               
               </item>
               
               <item>
                  
                  <para>If the <class namespace="Borland.Data.Web">DBWebDataSource</class>. <event namespace="Borland.Data.Web" class="DBWebDataSource">OnApplyChanges</event> property is null AND the <class namespace="Borland.Data.Web">DBWebNavigator</class>
                     
                     <event namespace="Borland.Data.Web" class="DBWebNavigator">Click</event> event is null, the <ide type="toolbarNode">Apply</ide> button is not enabled.</para>
               
               </item>
            
            </list>
            <warning xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <para>Although you can use the <class namespace="Borland.Data.Web">DBWebNavigator</class>
                  
                  <event namespace="Borland.Data.Web" class="DBWebNavigator">Click</event> event to apply changes to the server, this is not recommended. It is preferable to use the <class namespace="Borland.Data.Web">DBWebDataSource</class>
                  
                  <event namespace="Borland.Data.Web" class="DBWebDataSource">OnApplyChanges</event> event for this purpose. <event namespace="Borland.Data.Web" class="DBWebDataSource">OnApplyChanges</event> handles exceptions and clears session changes for you, whereas if you use the <class namespace="Borland.Data.Web">DBWebNavigator</class>
                  
                  <event namespace="Borland.Data.Web" class="DBWebNavigator">Click</event> event, you will be entirely responsible for coding these capabilities manually.</para>
            
            </warning>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can set the visibility for each button on the <class namespace="Borland.Data.Web">DBWebNavigator</class> by setting the Visible Buttons properties. You can find these in the Object Inspector in the Visible Buttons area. Setting a button property to False hides that button both at designtime and runtime. This can be useful when you want to expose a read-only view of the data so Web clients cannot change the data. For instance, you can remove the Insert, Delete, and Apply keys by setting the <property namespace="Borland.Data.Web" class="DBWebNavigator">InsertButtonVisible</property>, <property namespace="Borland.Data.Web" class="DBWebNavigator">DeleteButtonVisible</property>, and <property namespace="Borland.Data.Web" class="DBWebNavigator">ApplyButtonVisible</property> properties to False. By default, all buttons are visible. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebNavigator">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebNavigator</class> object, which is a data aware navigation control that allows you to scroll back and forth between records being displayed in data controls, such as a grid control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the data source to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the DBWebDataSource and link it to a valid data source.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebnavigator">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebnavigator">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ImagesVirtualPath">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the path to images that are to be used for the <class namespace="Borland.Data.Web">DBWebNavigator</class> buttons.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">ImageVirtualPath is used only when the <property namespace="borland.data.web" class="dbwebnavigator">ButtonType</property> is set to ButtonIcon. The default ImageVirtualPath is <codeInline>BorlandImages</codeInline>, which maps to a path containing the default image icons. By default, this is in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory. If the ImageVirtualPath value is blank, you must manually copy your images to the local directory for the ASP.NET project. Otherwise, if ImageVirtualPath is not blank, you must put your images in the local directory specified in that property.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Width">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the width in pixels of the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The default length, with all buttons visible, is 360 pixels. This is also the minimum width. There is no effective maximum width.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you enter a number, the <ide type="frame">Designer</ide> automatically appends <i>px</i> to the number. For instance, 360 pixels appears as <i>360px</i>. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The height of the control increases in proportion to the width, if you set only the width. You can also set the height to control the proportion of height to width.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Height">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the height in pixels of the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The default height is 25 pixels. The minimum height is 9px. There is no effective maximum height.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you enter a number, the <ide type="frame">Designer</ide> automatically appends <i>px</i> to the number. For instance, 10 pixels appears as <i>10px</i>. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.NextButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Next button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.PreviousButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Previous button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.FirstButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the First button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.LastButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Last button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.InsertButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Insert button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DeleteButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Delete button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ApplyButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Apply button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.RefreshButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Refresh button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UndoButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the Undo button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UndoAllButtonIcon">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a bitmap for the UndoAll button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Bitmaps for the DBWebNavigator icons are stored in the <codeInline>\Objrepos\Images</codeInline> subdirectory of your installation directory.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ButtonType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the type of button to display on the <class namespace="Borland.Data.Web">DBWebNavigator</class> control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Button types include:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Type</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ButtonIcons</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Displays icons based on image files you specify. By default, the image files provided by the IDE are used. A user can also specify any valid image files. For size consideration, the .gif format is the file type of choice. Each button property contains the name of an associated image file. </para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ButtonSymbols</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Displays a standard set of symbols, such as the greater than symbol (&gt;) for Next, and the less than symbol (&lt;) for Previous. The button symbols are <b>|&lt;</b> to go to first record, <b>&lt;&lt;</b> to page back, <b>&gt;&gt;</b> to page forward, <b>&gt;|</b> to go to the last record, <b>+</b> to insert a record, <b>-</b> to delete a record, <b>[&gt;]</b> to apply the data to the server, <b>[&lt;]</b> to refresh the data, <b>X</b> to undo, and <b>XX</b> to undo all.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ButtonText</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Displays text labels describing the operation of each button. These labels are First, Previous, Next, Last, Insert, Delete, Apply, Refresh, Undo, and UndoAll.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>ImageVirtualPath is used only when the <property namespace="borland.data.web" class="dbwebnavigator">ButtonType</property> is set to ButtonIcon. The default ImageVirtualPath is <codeInline>BorlandImages</codeInline>, which maps to a path in the Delphi IDE containing the default image icons. If the ImageVirtualPath value is blank, you must manually copy your images to the local directory for the ASP.NET project. Otherwise, if ImageVirtualPath is not blank, you must put your images in the local directory specified in that property.</para>
                  
            </note>
            <list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="bullet">
                     
               <item>
                        
                  <para>The Insert button inserts a new row into the table.</para>
                     
               </item>
                     
               <item>
                        
                  <para>The Delete button deletes the currently selected row.</para>
                     
               </item>
                     
               <item>
                        
                  <para>The Apply button applies changes by calling the <class namespace="Borland.Data.Web">DBWebDataSource</class>
                           
                     <event namespace="Borland.Data.Web" class="DBWebDataSource">OnApplyChangesRequest</event> event.</para>
                     
               </item>
                     
               <item>
                        
                  <para>The Refresh button refreshes data from the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. This button is only relevant if <class namespace="Borland.Data.Web">DBWebDataSource</class>. <property namespace="Borland.Data.Web" class="DBWebDataSource">AutoRefresh</property> is set to <b>False</b>.</para>
                     
               </item>
                     
               <item>
                        
                  <para>The Undo button undoes the last change.</para>
                     
               </item>
                     
               <item>
                        
                  <para>The UndoAll button undoes all changes. If connected to a master table, it removes all changes to the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. If connected to a detail table, it only removes changes to that detail table.</para>
                     
               </item>
                  
            </list>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.FirstButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the First button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.PrevButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Prev button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.NextButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Next button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.LastButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Last button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.RefreshButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Refresh button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.InsertButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Insert button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DeleteButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Delete button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UndoButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Undo button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UndoAllButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the UndoAll button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ApplyButtonVisible">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Determines whether or not the Apply button appears on the <class namespace="Borland.Data.Web">DBWebNavigator</class>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b> by default. </para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Text">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the text that should appear on the buttons when the <property namespace="Borland.Data.Web" class="DBWebNavigator">ButtonType</property> property is set to <b>ButtonText</b>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the following text appears on the buttons: First, Previous, Next, Last, Insert, Delete, Apply to Server, Refresh Data, Undo, Undo All.</para>
         </comments>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.Click">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Add code to handle button events on the <class namespace="Borland.Data.Web">DBWebNavigator</class> control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"/>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebTextBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data aware text box control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This class extends the .NET <class namespace="System.Web.UI.WebControls">TextBox</class> control. It implements <interface namespace="Borland.Data.Web">IDBWebColumnLink</interface>, <interface namespace="Borland.Data.Web">IDBWebDataLink</interface>, and <interface namespace="System.Web.UI">IPostBackDataHandler</interface>. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">To use this class, set the <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property>, <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property>, and <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> properties to achieve read-write binding to the column specified in the ColumnName property.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">All column types are valid except BLOB fields. Only non-BLOB fields appear in the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> drop-down list box.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebTextBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebTextBox</class> object, which is a data-aware text box control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid data source.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebtextbox">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebtextbox">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebLabel">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data-aware ASP.NET label control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This class extends the .NET <class namespace="System.Web.UI.WebControls">Label</class> control. To use this class, set the <property namespace="Borland.Data.Web" class="DBWebLabel">DBDataSource</property>, <property namespace="Borland.Data.Web" class="DBWebLabel">TableName</property>, and <property namespace="Borland.Data.Web" class="DBWebLabel">ColumnName</property> properties to achieve read-write binding to the column specified in the <property namespace="Borland.Data.Web" class="DBWebLabel">ColumnName</property> property.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">All column types are valid except BLOB fields. Only non-BLOB fields appear in the <property namespace="Borland.Data.Web" class="DBWebLabel">ColumnName</property> drop-down list box.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebLabel">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of the <class namespace="Borland.Data.Web">DBWebLabel</class> control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid data source.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbweblabel">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbweblabel">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.ClientAction">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Indicates an action taken by a user on a control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Not all actions apply to all controls.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Type</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Apply</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Applies a change.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Delete</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Deletes an entry, such as data in the cell of a grid control.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>DeleteRow</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Deletes an entire row from a row-based control.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>First</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Sets the selection to the first item in a collection.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Insert</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Inserts a new item into a collection.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Last</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Sets the selection to the last item in a collection.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Next</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Sets the selection to the next item in a collection.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>None</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies a null value rather than a selection of an item from a list.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Previous</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Sets the selection to the previous item in a collection.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Refresh</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Refreshes the data in a control.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>SetRow</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Sets the selection to a specific row.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Undo</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Rolls back the last change to an item.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>UndoAll</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Rolls back all changes to items in the control prior to applying those changes.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.ErrorHtmlOption">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The enum containing values that are used by the <property namespace="Borland.Data.Web" class="DBWebDataSource">ErrorOption</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <type namespace="borland.data.web">ErrorHtmlOption</type> is an enum containing the following values:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Value</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>logOnSamePage</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Error messages appear on the same page as the Web Form. </para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>logOnErrorPage</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Error messages appear on a separate page with an OK button that returns you to the Web Form.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>logWithErrorEvent</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Specifies that the user intends to handle all errors using the <event namespace="Borland.Data.Web" class="DBWebDataSource">OnError</event> event.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the data source that provides the data to populate the data aware control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends the <class namespace="System.ComponentModel">MarshalByValueComponent</class> and implements <interface namespace="Borland.Data.Web">IDBDataSource</interface>.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Works with both <varTechnology name="BDP"/> and ADO.NET providers. This component automatically identifies relationships and constraints by way of its referenced DataSet. It stores error information for each table.This class handles state management, binding, and connections to DataSets, DataTables, or DataViews:</para>
            <list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="bullet">
               
               <item>
                  
                  <para>
                     
                     <b>Row State Information.</b> DBWebDataSource maintains the current row, last row, and row count for each table in the data set. This information is associated with a session.</para>
               
               </item>
               
               <item>
                  
                  <para>
                     
                     <b>Row State Changes.</b> DBWebDataSource maintains a stack of row changes made since the data was refreshed, on a session-by-session basis. This functionality allows you to undo changes one at a time.</para>
               
               </item>
               
               <item>
                  
                  <para>
                     
                     <b>Session State.</b> Row state and change state information is stored on a session basis, allowing each client to maintain a separate copy of this information.</para>
               
               </item>
            
            </list>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">It is possible to connect DBWeb controls to different <class namespace="Borland.Data.Web">DBWebDataSource</class> objects. Certain rules, however, do apply when using this approach:</para>
            <list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" type="bullet">
               
               <item>
                  
                  <para>Each DataSet name must be unique. By default, the <ide type="dialog">Configure Data Adapter</ide> editor increments each default DataSet (name) property, for example, dataSet1, dataSet2, and so on. There is, however, a <property namespace="Borland.Data.Provider">DataSetName</property> property, which is set to NewDataSet by default, for every DataSet. You need to make each <property namespace="Borland.Data.Provider" class="BdpDataAdapter">DataSetName</property> unique.</para>
               
               </item>
               
               <item>
                  
                  <para>Each DataTable's TableName property must be unique. By default, the TableName should be incremented, for example, DataTable1, DataTable2, and so on. If you want to create your own unique DataTable names, you can select a DataSet, then open the <ide type="dialog">Tables Collection Editor</ide> and change the <b>(Name)</b> value in the Design area of the editor.</para>
               
               </item>
            
            </list>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The object connects the <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or the ADO.NET connector to the data aware web controls.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ErrorDlgBorderColor">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the color of the border for any error dialogs associated with the data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can set the colors in the <ide type="frame">Object Inspector</ide> by using the drop down color list for the property. You can also code the colors by name, using the list of available colors from the <class namespace="System.Drawing.Colors">Colors</class> members list in the .NET Framework.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ErrorOption">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies how errors are to be handled.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following enum values are available for the <property namespace="borland.data.web" class="dbwebdatasource">ErrorOption</property>:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Option</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>logOnSamePage</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Default. Error messages appear on the same page as the Web Form. </para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>logOnErrorPage</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Error messages appear on a separate page with an OK button that returns you to the Web Form.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>logWithErrorEvent</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies that the user intends to handle all errors using the <event namespace="borland.data.web" class="dbwebdatasource">OnError</event> event.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <warning xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>The logOnSamePage option should not be used if web controls are using Absolute Position.</para>
                  
            </warning>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ErrorDlgBorderWidth">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the border width for any error dialogs associated with the data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The border width is expressed in pixels. However, you can simply type in a number and the suffix <b>px</b> is automatically appended.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ErrorDlgBackColor">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the background color of the given error dialog.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can set the colors in the <ide type="frame">Object Inspector</ide> by using the drop down color list for the property. You can also code the colors by name, using the list of available colors from the <class namespace="System.Drawing.Colors">Colors</class> members list in the .NET Framework.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ErrorDlgForeColor">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the foreground or text color for any error dialog associated with the data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can set the colors in the <ide type="frame">Object Inspector</ide> by using the drop down color list for the property. You can also code the colors by name, using the list of available colors from the <class namespace="System.Drawing.Colors">Colors</class> members list in the .NET Framework.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.AutoRefresh">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Retrieves changes from the data provider each time a page is loaded. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If the <property namespace="borland.data.web" class="dbwebdatasource">AutoRefresh</property> property is False (default), the <class namespace="Borland.Data.Web">DBWebDataSource</class> only retrieves changes from the data provider if the client requests a refresh of the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. If True, changes are retrieved each time the page is loaded.</para>
            <warning xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>If you make changes to data that affects data that is changed by the data provider, no warning occurs. You must handle this possible conflict in your event code.</para>
                  
            </warning>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.CascadingDeletes">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies how the database server is configured in terms of the deletion of foreign key values in master-detail applications.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This property helps solve a problem with cascading deletes in master-detail applications. Typically, when you build a master-detail application, you include two BdpDataAdapters: one for the master table and one for the detail table. In addition, you include an OnApplyChanges event on the master BdpDataAdapter, which occurs whenever your application tries to apply data changes to the server. In that event, you must call the AutoUpdate method on the master BdpDataAdapter before trying to update the detail table. If you do not perform this step, you will experience a failure on the insertion of children rows in the detail table because the master table has not yet been updated. This creates a serious problem when deleting master rows. If you delete a master row before you delete the detail rows associated with the master, you will receive an error from the database server. Typically, you cannot leave detail rows unassociated with master rows in a database.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="borland.data.web" class="dbwebdatasource">CascadingDeletes</property> property allows you to specify how the server is configured in terms of deletion of rows in Master-Detail applications. </para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>NoMasterDelete (default)</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Disallows deletion of a parent row containing children. This option should be used when the server enforces a foreign constraint between master and detail, but it does not handle cascading deletes. In this scenario, the user must delete detail rows, apply the changes with an apply event, for example, BdpDetailAdapter.AutoUpdate, then delete the master row and call the apply event, for example, BdpMasterAdapter.AutoUpdate.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ServerCascadeDelete</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Allows deletion of the parent row, and it should be used whenever the server is set up to automatically handle cascading deletes. When a master row is deleted, the detail rows will automatically disappear from view. Any time prior to Applying the change, it is possible to undo the parent row delete and all the detail rows come back into view. If the server is not actually set up to handle cascading deletes, the detail rows might be orphaned on the server.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ServerNoForeignKey</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Automatically deletes all children whenever a parent row is deleted, and it should be used whenever there are no foreign key constraints between the master-detail table on the server. Like the ServerCascadeDelete option, when a master row is deleted, the detail rows will automatically disappear from view. Any time prior to Applying the change, it is possible to undo the parent row delete and all the detail rows come back into view. If this option is used and foreign key constraints do exist between master and detail tables, there are two possible errors that might occur. If the foreign key constraint is not set up to handle cascading deletes, then it is likely that an error will be thrown by the server when an attempt is made to delete the master table containing details. If the foreign key constraint is set up to handle cascading deletes, then it is likely that the server will delete the detail tables when the master row is deleted, and the subsequent attempt to delete the detail tables of the second adapter will throw an error.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.CascadingUpdates">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies how the database server is configured in terms of the update of foreign key values in master-detail applications.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">There is no way for the application to anticipate how the database server is configured to handle cascading updates at design time. You can set the following values to specify how the application is to respond to an update event.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Value</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>NoMasterUpdate</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Disallows changes to the foreign key value of a parent row if it contains any children. This is the default value.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ServerCascadeUpdate</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Allows the user or the application to change the foreign key value of the parent row. This value should be used whenever the database server is set up to automatically handle cascading updates. When the foreign key value of a master row is changed, the key value is also changed automatically in the detail rows. Any time prior to applying the change, the user or the application can undo the parent change and all the detail key changes will be undone as well. If the server is not actually set up to handle cascading updates, an error may occur when the application attempts to update the changes to the server.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>ServerNoForeignKey</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Allows the user or the application to change the foreign key value of the parent row. However, this value should be used whenever there is no foreign key between the master and detail tables on the database server. The difference between ServerNoForeignKey and ServerCascadeUpdate is that when ServerNoForeignKey is set, the detail values are changed by the DBWeb control prior to calling the apply event. The ServerCascadeUpdate does not change the detail values, as the application expects the server to handle the cascading updates automatically. </para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This property helps solve a problem with cascading updates in master-detail applications. Typically, when you build a master-detail application, you include two BdpDataAdapters: one for the master table and one for the detail table. In addition, you include an OnApplyChanges event on the master BdpDataAdapter, which occurs whenever your application tries to apply data changes to the server. In that event, you must call the AutoUpdate method on the master BdpDataAdapter before trying to update the detail table. If you do not perform this step, you will experience a failure on the insertion of children rows in the detail table because the master table has not yet been updated. If you update a master row before you update the detail rows associated with the master, you might receive an error from the database server. Typically, you should update detail rows prior to updating associated master rows.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.XMLFileName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the name of the XML file that will contain the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> data from your data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The XML file can be created by specifying a non-existent XML file in this property, then running your DBWeb-enabled application. You can also indicate an external XML file, but in that case, you may need to create the table mappings in your <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> manually. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Read-write applications using <property namespace="Borland.Data.Web" class="DBWebDataSource">XMLFileName</property> require that web clients have write access to the XML files they are writing to. If the web client does not have write access, a permissions error will occur whenever the client attempts to update the xml file. To avoid this, the application developer needs to grant rights to the clients who will be using the application. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> If <property namespace="Borland.Data.Web" class="DBWebDataSource">UseUniqueFileName</property> is <b>False</b>, then all users need to have write rights to the file specified by the <property namespace="Borland.Data.Web" class="DBWebDataSource">XMLFileName</property> property. You can set this up in Windows by checking the folder options in the Windows Explorer. Make sure that the Use Simple File Sharings option is not checked. Additionally, in the Windows Explorer, locate the XML file being used in the project, then add user <keyinput>EveryOne</keyinput> and apply <keyinput>Full Rights</keyinput> over this file in the Security tab of the Properties dialog. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If you are using user authentication and you have set <property namespace="Borland.Data.Web" class="DBWebDataSource">UseUniqueFileName</property> to <b>True</b>, you will need to create a new user group for the application, and create the XML files in a specific directory off of the Web Root directory in your IIS server. See the procedures in the Web Applications area of the <varProduct name="Product"/> Help for information on how to accomplish these tasks.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.XSDSchemaFile">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the name of an XML schema file (.XSD) that contains the structure of the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> generated from your data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The schema file (.XSD) defines the structure of the data in your XML file. The XSD file is optional. If the XSD file exists, Delphi uses it to declare the metadata of the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. If the XSD does not exist, you need to supply the metadata using the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>'s tables editor. In that situation, you create a table in the Tables collection for the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. The following sample XML file contains a few data records. You build the metadata for the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> by creating the table and columns to match the table and columns in the XML file.</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="all" os="all" product="all" status="release">&lt;?xml version="1.0" standalone="yes"?&gt;  /// XML Declaration
&lt;NewSongs&gt;
	&lt;song&gt;                          /// &lt;song&gt; becomes the table name in your DataSet.
		&lt;songid&gt;1001&lt;/songid&gt;                   /// &lt;songid&gt; becomes Column1 in your DataSet.
		&lt;title&gt;Mary Had a Little Lamb&lt;/title&gt;   /// &lt;title&gt; becomes Column2 in your DataSet.
	&lt;/song&gt;
	&lt;song&gt;
		&lt;songid&gt;1003&lt;/songid&gt;
		&lt;title&gt;Twinkle, Twinkle Little Star&lt;/title&gt;
	&lt;/song&gt;
&lt;/NewSongs&gt;</codeBlock>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.AutoUpdateCache">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies how changes are to be made to the XML file.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can use this property to support real-world applications using an XML file instead of a database as your data source. Use it in conjunction with user authentication and the <property namespace="Borland.Data.Web" class="DBWebDataSource">UseUniqueFileName</property> property.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">If <property namespace="Borland.Data.Web" class="DBWebDataSource">AutoUpdateCache</property> is set to <b>True</b>, the <class namespace="Borland.Data.Web">DBWebDataSource</class> control automatically writes any data changes to the XML file. If set to <b>False</b>, you are responsible for writing the changes using the <event namespace="Borland.Data.Web" class="DBWebDataSource">OnApplyChanges</event> event.</para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>If this property is set to <b>True</b>, the <property namespace="Borland.Data.Web" class="DBWebDataSource">UseUniqueFileName</property> property is ignored.</para>
                  
            </note>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.UseUniqueFileName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies that the <class namespace="Borland.Data.Web">DBWebDataSource</class> control should create unique file names for each XML file it writes to.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">When using an XML file or XSD file as your data source, instead of using a data adapter, concurrent access by multiple users is not possible. As a consequence, if you specify the same XML file for a multiuser application, each time a user updates the XML file, the update overwrites any data that was stored in the file by other users. To save each user's specific data, set <property namespace="Borland.Data.Web" class="DBWebDataSource">UseUniqueFileName</property> to <b>True</b>. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The major drawback of using XML files for a read-write data source is that you will need to write server application logic to reconcile the different data from the XML file for each user.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You need to create a data adapter and connection to a data source before you can provide this value. You can create a valid data source connection using one of the ADO.NET providers or the BDP.NET providers. For instance, you can drag-and-drop a table from the <ide type="frame">Data Explorer</ide> to create a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> and <class namespace="Borland.Data.Provider">BdpConnection</class>. You can then generate a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, which becomes the value you need to indicate for the <property namespace="Borland.Data.Web" class="DBWebDataSource">DataSource</property> property.</para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This property can be set to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, a DataTable, or a DataView. All of the tables associated with a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, or the DataTable's or DataView's <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, can connect <varTechnology name="DBWeb"/> to the <class namespace="Borland.Data.Web">DBWebDataSource</class>.</para>
         </comments>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.OnApplyChangesRequest">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Occurs when a change has been made to data in a control and the user or the application performs an action to complete the update, such as clicking an <b>Apply</b> button.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> This is the preferred method of applying changes back to the data provider. If the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> is connected to a BdpDataAdapter, you can make a call:</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">BdpDataAdapter1.AutoUpdate();</codeBlock>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"> If you are updating multiple data adapters, you should place this code within a transaction so that, in case of an error, you can roll back the changes. If the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> is connected to a SqlDataAdapter, you need to set up an UpdateCommand to handle the update.</para>
         </comments>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.OnAutoApplyRequest">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Allows a developer to automatically apply updates to the server whenever the client makes an update.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can add code to this event to update the server from the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. When the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> is connected to a <class namespace="Borland.Data.Provider">BdpDataAdapter</class>, the code typically looks like this:</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">BdpDataAdapter1.AutoUpdate();</codeBlock>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set this event by double-clicking the event name in the <ide type="frameNode">Event</ide> tab of the <ide type="frame">Object Inspector</ide>. This event allows you to ensure that updates to the server occur every time they are made by any client. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, this event is set to a null value.</para>
            <note xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <para>You can use either this event or the <event namespace="Borland.Data.Web" class="DBWebDataSource">OnApplyRequest</event> event, which provides 3-tier updates in which the client controls when updates are made to the server. </para>
                  
            </note>
         </comments>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.OnGetPostCollection">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Called before changes are retrieved from the client page.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Changes from the client page are retrieved in the form of a NameValueCollection and are sent to the DBWebDataSource to update the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. This event allows you to check for actions, such as button clicks, before applying the update to the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. </para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                        
                  <th>Type</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>sender</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Refers to the Object that has initiated the event.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Object</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>e</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>A parameter of the type <class namespace="Borland.Data.Web">PostCollectionEventArgs</class>.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>
                              
                        <class namespace="Borland.Data.Web">PostCollectionEventArgs</class>
                           
                     </para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>StopUpdate</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>An output parameter that, when set to <b>True</b>, indicates the update to the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> should be stopped. When set to <b>False</b>, the update to the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> is applied. The default value is <b>False</b>.</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Boolean</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">See also the PostCollectionEventArgs class. PostCollectionEventArgs derives from the EventArgs class, but adds a member, NameValueCollection.PostCollection. Assuming you had an ASP.NET web form that included a Cancel button, the following code illustrates the use of <event namespace="borland.data.web" class="dbwebdatasource">OnGetPostCollection</event> event and the PostCollectionEventArgs class.</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><?xm-replace_text {codeBlock}?></codeBlock>
         </comments>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.OnAfterSetChanges">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Called immediately after all state changes have been made to the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> controlled by the <class namespace="Borland.Data.Web">DBWebDataSource</class>. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Use this to update web controls (other than <varTechnology name="DBWeb"/>) with the current values from the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>. For example, a user might add the following code to fill a textbox with values from the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>:</para>
            <codeBlock xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" language="DelphiNet">OnAfterSetChanges {
	MyAspTextBox.Text := (DBWebDataSource1 as IDBDataSource).GetColumnValue(Page, 'EMPLOYEE','EMP_ID');
}</codeBlock>
         </comments>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.OnRefreshRequest">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Called whenever a request is made to refresh the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> from the data provider.</para>
         </summary>
         <comments/>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.OnScroll">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Called whenever a row movement occurs.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A number of data aware controls support scrolling, including the <class namespace="Borland.Data.Web">DBWebGrid</class>, a multiline <class namespace="Borland.Data.Web">DBWebTextBox</class>, and the <class namespace="Borland.Data.Web">DBWebListBox</class>. The <event namespace="Borland.Data.Web" class="DBWebDataSource">OnScrollEventArgs</event> provide the user with the <property namespace="borland.data.web" class="dbwebdropdownlist">TableName</property>, the current row, and the row that was current prior to the change.</para>
         </comments>
      </member>
      <member name="E:Borland.Data.Web.Borland.Data.Web.OnError">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Called when an error occurs during the processing of a request.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The eventArgs for <event namespace="borland.data.web" class="dbwebdatasource">OnError</event> contain an ArrayList of any error messages and an ArrayList of all warning messages. You can then decide how to handle the errors, based on these messages. </para>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">When an <event namespace="borland.data.web" class="dbwebdatasource">OnError</event> event is in place, it supercedes any <property namespace="borland.data.web" class="dbwebdatasource">ErrorOption</property> settings. If you want to use <property namespace="borland.data.web" class="dbwebdatasource">ErrorOption</property>, you should remove any <event namespace="borland.data.web" class="dbwebdatasource">OnError</event> events.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebListBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data aware listbox control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends the .NET Framework web <class namespace="System.Web.UI.WebControls">ListBox</class>. Implements <interface namespace="System.Web.UI">IDBWebLookupColumnLink</interface>: <interface namespace="System.Web.UI">IDBWebColumnLink</interface>.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebListBox">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebListBox</class> object, which is a data-aware list box control.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the <class namespace="Borland.Data.Web">DBWebDataSource</class> and link it to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebListBox">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbweblistbox">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbweblistbox">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebListBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebListBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebListBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebListBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebListBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebListBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.LookupTableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the lookup table that contains list items for the drop down list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This is a different table than the DataTable you specify as a data source. When you identify the <class namespace="Borland.Data.Web">DBDataSource</class>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">TableName</property>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property>, and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>, an in-memory table is constructed and populated with the values retrieved from your data source based on the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property> and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>. By default, the table is named <b>Table</b>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataTextField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a column in an in-memory DataTable, whose values are to be displayed as list items in the list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can specify any available column from your <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> for this property, regardless of data type.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataValueField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a column in an in-memory DataTable, whose values are to be displayed as list items in the list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can specify any available column from your <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> for this property, regardless of data type.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebRadioButtonList">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A data aware radio button list control, which displays three radio buttons, by default. </para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The list will automatically expand to accommodate the number of rows in the data column to which you bind the <class namespace="Borland.Data.Web">DBWebRadioButtonList</class> control. </para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebRadioButtonList">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebRadioButtonList</class> object, which is a data aware radio button group of three buttons.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the control to a given column of the correct data type.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you specify a <class namespace="Borland.Data.Web">DBWebDataSource</class> in the control <property namespace="Borland.Data.Web" class="DBWebRadioButtonList">DBDataSource</property> property and link the property to a valid <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebradiobuttonlist">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="Borland.Data.Web" class="DBWebRadioButtonList">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.LookupTableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the lookup table that contains list items for the drop down list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This is a different table than the DataTable you specify as a data source. When you identify the <class namespace="Borland.Data.Web">DBDataSource</class>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">TableName</property>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property>, and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>, an in-memory table is constructed and populated with the values retrieved from your data source based on the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property> and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>. By default, the table is named <b>Table</b>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataTextField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataValueField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebDropDownList">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Represents a data aware combo box control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Extends the .NET <class namespace="System.Web.UI.WebControls">DropDownList</class>.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebDropDownList">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebDropDownList</class>.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DataBind">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Binds the columns in the data source to the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This operation is automatically handled for you when you create a new instance of the DBWebDataSource and link it to a valid data source.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.TableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the DataTable in the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> that is named in the <property namespace="Borland.Data.Web" class="DBWebGrid">DBDataSource</property> property.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">By default, the table is named <i>DataTable1</i>. To view the <property namespace="borland.data.web" class="dbwebdropdownlist">TableName</property>, select your generated <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property>, then open the <ide type="dialog">Tables Collection Editor</ide>. The <property namespace="borland.data.web" class="dbwebdropdownlist">TableName</property> is shown in the properties list for the selected table.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a data source.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Typically, this is the name of a <class namespace="Borland.Data.Web">DBWebDataSource</class> object that links to a dataset that has been generated by a <class namespace="Borland.Data.Provider">BdpDataAdapter</class> or an ADO.NET provider.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.ColumnName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Identifies the <property namespace="borland.data.web" class="webcontroleventargs">DataSet</property> column that is linked to the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property identifies the field that links the control to the DataTable. In other words, <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> is the source for the link. For example, if you link to the Employee table in the sample InterBase database, then set your <property namespace="Borland.Data.Web" class="DBWebTextBox">DBDataSource</property> and your <property namespace="Borland.Data.Web" class="DBWebTextBox">TableName</property> to the available objects, the <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> property will display all the column names from the dataset. The column you choose for <property namespace="Borland.Data.Web" class="DBWebTextBox">ColumnName</property> determines where updates occur when you make changes to the control in the runtime application.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.LookupTableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The name of the lookup table that contains list items for the drop down list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">This is a different table than the DataTable you specify as a data source. When you identify the <class namespace="Borland.Data.Web">DBDataSource</class>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">TableName</property>, the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property>, and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>, an in-memory table is constructed and populated with the values retrieved from your data source based on the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property> and the <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataTextField</property>. By default, the table is named <b>Table</b>.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataTextField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a column in an in-memory DataTable, whose values are to be displayed as list items in the list box.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can specify any available column from your data source for this property, regardless of data type.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.DataValueField">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies a particular value for each item in the list.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The column you choose determines how you can use this information. For example, it might be more useful to choose a column that is both unique and numeric, such as an employee number or social security number for a list of employees, than to choose an alphanumeric column with duplicate values, such as FIRST_NAME. On the other hand, you might have use for a data value field that uses department number, despite its use of duplicates. The <property namespace="Borland.Data.Web" class="DBWebDropDownList">DataValueField</property> stores a value attribute for each list item in the <b>.asmx</b> file. </para>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.eRemoveBindingType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">An enum that provides values for any method that removes data binding from controls.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The enum provides the following values:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Value</th>
                  
                  <th>Description</th>
                  
                  <th>Type</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>erbtAll</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Removes all binding types.</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>int32</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>erbtColumnsOnly</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Removes binding for columns only.</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>int32</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>erbtLookupColumnsOnly</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Removes binding for lookup columns only.</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>int32</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>erbtTablesAndColumns</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Removes binding for tables and columns.</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>int32</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.AggType">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Defines a set of aggregate types.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <type namespace="borland.data.web">AggType</type> enum defines the following aggregate types.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Enum</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>aggAvg</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Averages all values in the selected column.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>aggCount</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Provides a count of all values in the selected column, including NULL values, unless they are explicitly restricted by use of the <property namespace="borland.data.web" class="dbwebaggregatecontrol">IgnoreNullValues</property> property.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>aggMax</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Provides the largest number in the set.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>aggMin</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Provides the smallest number in the set.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>aggSum</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Provides a total of all the values in the selected column.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DataSetAction">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Enumerates the actions that can be taken on a dataset, typically from a navigation control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The <type namespace="borland.data.web">DataSetAction</type> enum supports the following values.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
               
               <tr>
                  
                  <th>Type</th>
                  
                  <th>Description</th>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Apply</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Applies client changes to the dataset.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Cancel</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Cancels a current action.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Delete</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Deletes the currently selected row.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Insert</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Inserts a blank row.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MoveFirst</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Positions the cursor at the first row in the dataset.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MoveLast</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Positions the cursor at the last row in the dataset.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MoveNext</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Moves the cursor to the next row.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>MovePrev</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Moves the cursor to the previous row.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>None</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Has no effect.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Refresh</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Refreshes the dataset to reflect any updates that have been made.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Undo</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Undoes the last operation.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>UndoAll</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Undoes all operations in the current session.</para>
                  
                  </td>
               
               </tr>
               
               <tr>
                  
                  <td>
                     
                     <para>Update</para>
                  
                  </td>
                  
                  <td>
                     
                     <para>Updates the data source with changes in the dataset.</para>
                  
                  </td>
               
               </tr>
            
            </table>
         </comments>
      </member>
      <member name="T:Borland.Data.Web.DBWebNavigationExtender">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Uses the Navigation API to extend standard web controls into individual data-aware navigation controls.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">You can use the <class namespace="Borland.Data.Web">DBWebNavigationExtender</class> class to extend standard web controls, such as buttons, to act like data-aware <varTechnology name="DBWeb"/>. Using this class, you can set properties for Previous, Next, First, Last, Undo, UndoAll, Refresh and other navigation operations.</para>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.DBWebNavigationExtender">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Creates a new instance of a <class namespace="Borland.Data.Web">DBWebNavigationExtender</class> class.</para>
         </summary>
         <comments/>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.GetDataSourceAction">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the <type namespace="Borland.Data.Web">DataSetAction</type> for the specified control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specify a control to see what action has been assigned to it.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>control</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Inherits from Button. Specify the web control that is being used as a navigator.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.SetDataSourceAction">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the control to use one of the <type namespace="Borland.Data.Web">DataSetAction</type> types.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">The following values apply:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Value</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>control</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Inherits from Button. Specifies the control.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies one of the <type namespace="Borland.Data.Web">DataSetAction</type> values.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.GetTableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns the table name associated with the specified control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Given a control name, this method returns a string containing the name of the associated DataTable.</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>control</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Name of the navigation control.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.SetTableName">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Specifies the table to be associated with the web control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Each web control acting as a navigation control must be associated with a table. </para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>control</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Inherits from Button. Specifies the standard web control to be used as a navigation control.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Specifies the name of a table.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.GetDBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns an instance of the data source associated with the specified navigation control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Returns an instance of <interface namespace="Borland.Data.Web">IDBDataSource</interface>. </para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>control</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Name of the web control being used as a navigation control.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="M:Borland.Data.Web.Borland.Data.Web.SetDBDataSource">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Sets the data source for the control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Supply the following parameters to set the data source for a control:</para>
            <table xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
                     
               <tr>
                        
                  <th>Parameter</th>
                        
                  <th>Description</th>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>control</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Inherits from Button. Specifies the web control to use as the navigator.</para>
                        
                  </td>
                     
               </tr>
                     
               <tr>
                        
                  <td>
                           
                     <para>value</para>
                        
                  </td>
                        
                  <td>
                           
                     <para>Implements IDBDataSource. Provides an instance of the data source.</para>
                        
                  </td>
                     
               </tr>
                  
            </table>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.NavObjects">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">A collection of navigation objects.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Navigation objects are stored in a collection containing one or more web controls being used as navigators.</para>
         </comments>
      </member>
      <member name="P:Borland.Data.Web.Borland.Data.Web.Enabled">
         <summary>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Enables the web control to act as a <class namespace="Borland.Data.Web">DBWebNavigator</class> control.</para>
         </summary>
         <comments>
            <para xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">Set to <b>True</b>, the control exposes one of the standard <class namespace="Borland.Data.Web">DBWebNavigator</class> actions. Set to <b>False</b>, the control acts as a standard web control.</para>
         </comments>
      </member>
   </members>
</doc>